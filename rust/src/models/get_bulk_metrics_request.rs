/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetBulkMetricsRequest {
    /// List of device IDs
    #[serde(rename = "devices")]
    pub devices: Vec<String>,
    #[serde(rename = "metricTypes", skip_serializing_if = "Option::is_none")]
    pub metric_types: Option<Vec<MetricTypes>>,
}

impl GetBulkMetricsRequest {
    pub fn new(devices: Vec<String>) -> GetBulkMetricsRequest {
        GetBulkMetricsRequest {
            devices,
            metric_types: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MetricTypes {
    #[serde(rename = "resource")]
    Resource,
    #[serde(rename = "environmental")]
    Environmental,
}

impl Default for MetricTypes {
    fn default() -> MetricTypes {
        Self::Resource
    }
}

