/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateOrUpdateDeviceRequest {
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    /// Client-generated request ID for tracking
    #[serde(rename = "requestId")]
    pub request_id: uuid::Uuid,
    #[serde(rename = "config")]
    pub config: Box<models::DeviceConfigUpdateMessage>,
}

impl CreateOrUpdateDeviceRequest {
    pub fn new(r#type: String, timestamp: String, request_id: uuid::Uuid, config: models::DeviceConfigUpdateMessage) -> CreateOrUpdateDeviceRequest {
        CreateOrUpdateDeviceRequest {
            r#type,
            timestamp,
            request_id,
            config: Box::new(config),
        }
    }
}

