/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AclActionRedirect {
    /// Interface to redirect traffic to
    #[serde(rename = "interface", skip_serializing_if = "Option::is_none")]
    pub interface: Option<String>,
    /// Next hop IP address
    #[serde(rename = "nextHop", skip_serializing_if = "Option::is_none")]
    pub next_hop: Option<String>,
}

impl AclActionRedirect {
    pub fn new() -> AclActionRedirect {
        AclActionRedirect {
            interface: None,
            next_hop: None,
        }
    }
}

