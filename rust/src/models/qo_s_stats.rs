/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// QoSStats : QoS-related statistics
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QoSStats {
    #[serde(rename = "queueStats", skip_serializing_if = "Option::is_none")]
    pub queue_stats: Option<std::collections::HashMap<String, models::QoSStatsQueueStatsValue>>,
    #[serde(rename = "dscp", skip_serializing_if = "Option::is_none")]
    pub dscp: Option<std::collections::HashMap<String, f64>>,
}

impl QoSStats {
    /// QoS-related statistics
    pub fn new() -> QoSStats {
        QoSStats {
            queue_stats: None,
            dscp: None,
        }
    }
}

