/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetSystemSettings200Response {
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<String>,
    #[serde(rename = "dnsSettings", skip_serializing_if = "Option::is_none")]
    pub dns_settings: Option<Box<models::DnsSettings>>,
    /// List of NTP servers (can be IP addresses or FQDNs)
    #[serde(rename = "ntpServers", skip_serializing_if = "Option::is_none")]
    pub ntp_servers: Option<Vec<models::DeviceSettingsNtpServersInner>>,
    /// List of syslog servers
    #[serde(rename = "syslogServers", skip_serializing_if = "Option::is_none")]
    pub syslog_servers: Option<Vec<models::DeviceSettingsNtpServersInner>>,
}

impl GetSystemSettings200Response {
    pub fn new() -> GetSystemSettings200Response {
        GetSystemSettings200Response {
            hostname: None,
            dns_settings: None,
            ntp_servers: None,
            syslog_servers: None,
        }
    }
}

