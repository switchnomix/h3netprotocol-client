/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// NetworkTopology : Network topology information
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkTopology {
    /// Network nodes/devices
    #[serde(rename = "nodes")]
    pub nodes: Vec<models::Device>,
    /// Network links between devices
    #[serde(rename = "links")]
    pub links: Vec<models::NetworkTopologyLinksInner>,
    /// Timestamp of last topology update
    #[serde(rename = "lastUpdated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
}

impl NetworkTopology {
    /// Network topology information
    pub fn new(nodes: Vec<models::Device>, links: Vec<models::NetworkTopologyLinksInner>) -> NetworkTopology {
        NetworkTopology {
            nodes,
            links,
            last_updated: None,
        }
    }
}

