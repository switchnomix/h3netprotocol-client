/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Capabilities : Device capabilities and features
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Capabilities {
    #[serde(rename = "routingSupport", skip_serializing_if = "Option::is_none")]
    pub routing_support: Option<bool>,
    #[serde(rename = "firewallSupport", skip_serializing_if = "Option::is_none")]
    pub firewall_support: Option<bool>,
    #[serde(rename = "vpnSupport", skip_serializing_if = "Option::is_none")]
    pub vpn_support: Option<bool>,
    #[serde(rename = "loadBalancing", skip_serializing_if = "Option::is_none")]
    pub load_balancing: Option<bool>,
    #[serde(rename = "qosSupport", skip_serializing_if = "Option::is_none")]
    pub qos_support: Option<bool>,
    #[serde(rename = "ipv6Support", skip_serializing_if = "Option::is_none")]
    pub ipv6_support: Option<bool>,
    #[serde(rename = "mplsSupport", skip_serializing_if = "Option::is_none")]
    pub mpls_support: Option<bool>,
    #[serde(rename = "sflowSupport", skip_serializing_if = "Option::is_none")]
    pub sflow_support: Option<bool>,
    #[serde(rename = "netflowSupport", skip_serializing_if = "Option::is_none")]
    pub netflow_support: Option<bool>,
    #[serde(rename = "features", skip_serializing_if = "Option::is_none")]
    pub features: Option<std::collections::HashMap<String, bool>>,
    #[serde(rename = "supportedProtocols", skip_serializing_if = "Option::is_none")]
    pub supported_protocols: Option<Vec<String>>,
    #[serde(rename = "hardwareCapabilities", skip_serializing_if = "Option::is_none")]
    pub hardware_capabilities: Option<Box<models::CapabilitiesHardwareCapabilities>>,
}

impl Capabilities {
    /// Device capabilities and features
    pub fn new() -> Capabilities {
        Capabilities {
            routing_support: None,
            firewall_support: None,
            vpn_support: None,
            load_balancing: None,
            qos_support: None,
            ipv6_support: None,
            mpls_support: None,
            sflow_support: None,
            netflow_support: None,
            features: None,
            supported_protocols: None,
            hardware_capabilities: None,
        }
    }
}

