/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeviceConfigUpdateMessageAllOfConfig {
    #[serde(rename = "deviceSettings")]
    pub device_settings: Box<models::DeviceSettings>,
    #[serde(rename = "interfaces", skip_serializing_if = "Option::is_none")]
    pub interfaces: Option<std::collections::HashMap<String, models::DeviceConfigUpdateMessageAllOfConfigInterfaces>>,
}

impl DeviceConfigUpdateMessageAllOfConfig {
    pub fn new(device_settings: models::DeviceSettings) -> DeviceConfigUpdateMessageAllOfConfig {
        DeviceConfigUpdateMessageAllOfConfig {
            device_settings: Box::new(device_settings),
            interfaces: None,
        }
    }
}

