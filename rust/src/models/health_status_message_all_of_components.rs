/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HealthStatusMessageAllOfComponents {
    #[serde(rename = "database", skip_serializing_if = "Option::is_none")]
    pub database: Option<Database>,
    #[serde(rename = "api", skip_serializing_if = "Option::is_none")]
    pub api: Option<Api>,
    #[serde(rename = "telemetry", skip_serializing_if = "Option::is_none")]
    pub telemetry: Option<Telemetry>,
}

impl HealthStatusMessageAllOfComponents {
    pub fn new() -> HealthStatusMessageAllOfComponents {
        HealthStatusMessageAllOfComponents {
            database: None,
            api: None,
            telemetry: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Database {
    #[serde(rename = "healthy")]
    Healthy,
    #[serde(rename = "degraded")]
    Degraded,
    #[serde(rename = "unhealthy")]
    Unhealthy,
}

impl Default for Database {
    fn default() -> Database {
        Self::Healthy
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Api {
    #[serde(rename = "healthy")]
    Healthy,
    #[serde(rename = "degraded")]
    Degraded,
    #[serde(rename = "unhealthy")]
    Unhealthy,
}

impl Default for Api {
    fn default() -> Api {
        Self::Healthy
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Telemetry {
    #[serde(rename = "healthy")]
    Healthy,
    #[serde(rename = "degraded")]
    Degraded,
    #[serde(rename = "unhealthy")]
    Unhealthy,
}

impl Default for Telemetry {
    fn default() -> Telemetry {
        Self::Healthy
    }
}

