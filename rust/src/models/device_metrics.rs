/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeviceMetrics {
    #[serde(rename = "vlanStats", skip_serializing_if = "Option::is_none")]
    pub vlan_stats: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "routeStats", skip_serializing_if = "Option::is_none")]
    pub route_stats: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "firewallHits", skip_serializing_if = "Option::is_none")]
    pub firewall_hits: Option<i32>,
    #[serde(rename = "resources", skip_serializing_if = "Option::is_none")]
    pub resources: Option<Box<models::ResourceMetrics>>,
    #[serde(rename = "environmental", skip_serializing_if = "Option::is_none")]
    pub environmental: Option<Box<models::EnvironmentalMetrics>>,
    /// Vendor-specific or custom metrics
    #[serde(rename = "customMetrics", skip_serializing_if = "Option::is_none")]
    pub custom_metrics: Option<std::collections::HashMap<String, serde_json::Value>>,
}

impl DeviceMetrics {
    pub fn new() -> DeviceMetrics {
        DeviceMetrics {
            vlan_stats: None,
            route_stats: None,
            firewall_hits: None,
            resources: None,
            environmental: None,
            custom_metrics: None,
        }
    }
}

