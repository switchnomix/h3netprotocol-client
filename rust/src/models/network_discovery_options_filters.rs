/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// NetworkDiscoveryOptionsFilters : Discovery filters
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkDiscoveryOptionsFilters {
    #[serde(rename = "deviceTypes", skip_serializing_if = "Option::is_none")]
    pub device_types: Option<Vec<models::DeviceRoleEnum>>,
    #[serde(rename = "subnets", skip_serializing_if = "Option::is_none")]
    pub subnets: Option<Vec<String>>,
}

impl NetworkDiscoveryOptionsFilters {
    /// Discovery filters
    pub fn new() -> NetworkDiscoveryOptionsFilters {
        NetworkDiscoveryOptionsFilters {
            device_types: None,
            subnets: None,
        }
    }
}

