/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RouteEntryBfd {
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "minTx", skip_serializing_if = "Option::is_none")]
    pub min_tx: Option<i32>,
    #[serde(rename = "minRx", skip_serializing_if = "Option::is_none")]
    pub min_rx: Option<i32>,
    #[serde(rename = "multiplier", skip_serializing_if = "Option::is_none")]
    pub multiplier: Option<i32>,
}

impl RouteEntryBfd {
    pub fn new() -> RouteEntryBfd {
        RouteEntryBfd {
            enabled: None,
            min_tx: None,
            min_rx: None,
            multiplier: None,
        }
    }
}

