/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkDiscoveryResponseMessageAllOfTopologyLinks {
    /// Represents either an IPv4 or IPv6 address
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
    /// Represents either an IPv4 or IPv6 address
    #[serde(rename = "target", skip_serializing_if = "Option::is_none")]
    pub target: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl NetworkDiscoveryResponseMessageAllOfTopologyLinks {
    pub fn new() -> NetworkDiscoveryResponseMessageAllOfTopologyLinks {
        NetworkDiscoveryResponseMessageAllOfTopologyLinks {
            source: None,
            target: None,
            r#type: None,
        }
    }
}

