/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// VlanProperties : Extended VLAN properties
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VlanProperties {
    #[serde(rename = "mtu", skip_serializing_if = "Option::is_none")]
    pub mtu: Option<i32>,
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
    #[serde(rename = "igmpSnooping", skip_serializing_if = "Option::is_none")]
    pub igmp_snooping: Option<bool>,
    #[serde(rename = "dhcpSnooping", skip_serializing_if = "Option::is_none")]
    pub dhcp_snooping: Option<bool>,
    #[serde(rename = "arpInspection", skip_serializing_if = "Option::is_none")]
    pub arp_inspection: Option<bool>,
    #[serde(rename = "stormControl", skip_serializing_if = "Option::is_none")]
    pub storm_control: Option<Box<models::VlanPropertiesStormControl>>,
}

impl VlanProperties {
    /// Extended VLAN properties
    pub fn new() -> VlanProperties {
        VlanProperties {
            mtu: None,
            priority: None,
            igmp_snooping: None,
            dhcp_snooping: None,
            arp_inspection: None,
            storm_control: None,
        }
    }
}

