/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BgpNeighbor {
    /// Represents either an IPv4 or IPv6 address
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "remoteAs")]
    pub remote_as: i32,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Represents either an IPv4 or IPv6 address
    #[serde(rename = "localAddress", skip_serializing_if = "Option::is_none")]
    pub local_address: Option<String>,
    #[serde(rename = "timers", skip_serializing_if = "Option::is_none")]
    pub timers: Option<Box<models::BgpNeighborTimers>>,
}

impl BgpNeighbor {
    pub fn new(address: String, remote_as: i32) -> BgpNeighbor {
        BgpNeighbor {
            address,
            remote_as,
            description: None,
            local_address: None,
            timers: None,
        }
    }
}

