/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentalMetricsPower {
    #[serde(rename = "consumption", skip_serializing_if = "Option::is_none")]
    pub consumption: Option<f64>,
    #[serde(rename = "efficiency", skip_serializing_if = "Option::is_none")]
    pub efficiency: Option<f64>,
    #[serde(rename = "sources", skip_serializing_if = "Option::is_none")]
    pub sources: Option<Vec<models::EnvironmentalMetricsPowerSourcesInner>>,
}

impl EnvironmentalMetricsPower {
    pub fn new() -> EnvironmentalMetricsPower {
        EnvironmentalMetricsPower {
            consumption: None,
            efficiency: None,
            sources: None,
        }
    }
}

