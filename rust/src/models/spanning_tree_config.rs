/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SpanningTreeConfig {
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<Mode>,
}

impl SpanningTreeConfig {
    pub fn new(enabled: bool) -> SpanningTreeConfig {
        SpanningTreeConfig {
            enabled,
            mode: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Mode {
    #[serde(rename = "stp")]
    Stp,
    #[serde(rename = "rstp")]
    Rstp,
    #[serde(rename = "mstp")]
    Mstp,
}

impl Default for Mode {
    fn default() -> Mode {
        Self::Stp
    }
}

