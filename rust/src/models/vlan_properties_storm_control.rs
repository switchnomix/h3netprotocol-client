/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VlanPropertiesStormControl {
    #[serde(rename = "broadcast", skip_serializing_if = "Option::is_none")]
    pub broadcast: Option<i32>,
    #[serde(rename = "multicast", skip_serializing_if = "Option::is_none")]
    pub multicast: Option<i32>,
    #[serde(rename = "unicast", skip_serializing_if = "Option::is_none")]
    pub unicast: Option<i32>,
}

impl VlanPropertiesStormControl {
    pub fn new() -> VlanPropertiesStormControl {
        VlanPropertiesStormControl {
            broadcast: None,
            multicast: None,
            unicast: None,
        }
    }
}

