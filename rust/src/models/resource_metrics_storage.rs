/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResourceMetricsStorage {
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f64>,
    #[serde(rename = "used", skip_serializing_if = "Option::is_none")]
    pub used: Option<f64>,
    #[serde(rename = "free", skip_serializing_if = "Option::is_none")]
    pub free: Option<f64>,
}

impl ResourceMetricsStorage {
    pub fn new() -> ResourceMetricsStorage {
        ResourceMetricsStorage {
            total: None,
            used: None,
            free: None,
        }
    }
}

