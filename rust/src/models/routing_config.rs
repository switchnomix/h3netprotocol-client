/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RoutingConfig {
    #[serde(rename = "staticRoutes", skip_serializing_if = "Option::is_none")]
    pub static_routes: Option<Vec<models::RouteEntry>>,
    #[serde(rename = "bgp", skip_serializing_if = "Option::is_none")]
    pub bgp: Option<Box<models::RoutingConfigBgp>>,
    #[serde(rename = "ospf", skip_serializing_if = "Option::is_none")]
    pub ospf: Option<Box<models::RoutingConfigOspf>>,
}

impl RoutingConfig {
    pub fn new() -> RoutingConfig {
        RoutingConfig {
            static_routes: None,
            bgp: None,
            ospf: None,
        }
    }
}

