/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QoSStatsQueueStatsValue {
    #[serde(rename = "packets", skip_serializing_if = "Option::is_none")]
    pub packets: Option<f64>,
    #[serde(rename = "bytes", skip_serializing_if = "Option::is_none")]
    pub bytes: Option<f64>,
    #[serde(rename = "dropped", skip_serializing_if = "Option::is_none")]
    pub dropped: Option<f64>,
    #[serde(rename = "queueLength", skip_serializing_if = "Option::is_none")]
    pub queue_length: Option<f64>,
}

impl QoSStatsQueueStatsValue {
    pub fn new() -> QoSStatsQueueStatsValue {
        QoSStatsQueueStatsValue {
            packets: None,
            bytes: None,
            dropped: None,
            queue_length: None,
        }
    }
}

