/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventNotificationMessageAllOfSource {
    #[serde(rename = "deviceId")]
    pub device_id: String,
    #[serde(rename = "component", skip_serializing_if = "Option::is_none")]
    pub component: Option<String>,
}

impl EventNotificationMessageAllOfSource {
    pub fn new(device_id: String) -> EventNotificationMessageAllOfSource {
        EventNotificationMessageAllOfSource {
            device_id,
            component: None,
        }
    }
}

