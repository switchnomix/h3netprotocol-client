/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MetricData : Generic metric data structure
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MetricData {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "value")]
    pub value: f64,
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<String>,
    #[serde(rename = "timestamp")]
    pub timestamp: String,
}

impl MetricData {
    /// Generic metric data structure
    pub fn new(name: String, value: f64, timestamp: String) -> MetricData {
        MetricData {
            name,
            value,
            unit: None,
            timestamp,
        }
    }
}

