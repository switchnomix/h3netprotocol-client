/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InterfaceOperationalState {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "operStatus")]
    pub oper_status: OperStatus,
    #[serde(rename = "adminStatus")]
    pub admin_status: AdminStatus,
    #[serde(rename = "lastChange", skip_serializing_if = "Option::is_none")]
    pub last_change: Option<String>,
}

impl InterfaceOperationalState {
    pub fn new(name: String, oper_status: OperStatus, admin_status: AdminStatus) -> InterfaceOperationalState {
        InterfaceOperationalState {
            name,
            oper_status,
            admin_status,
            last_change: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OperStatus {
    #[serde(rename = "up")]
    Up,
    #[serde(rename = "down")]
    Down,
    #[serde(rename = "testing")]
    Testing,
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "dormant")]
    Dormant,
    #[serde(rename = "notPresent")]
    NotPresent,
}

impl Default for OperStatus {
    fn default() -> OperStatus {
        Self::Up
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AdminStatus {
    #[serde(rename = "up")]
    Up,
    #[serde(rename = "down")]
    Down,
    #[serde(rename = "testing")]
    Testing,
}

impl Default for AdminStatus {
    fn default() -> AdminStatus {
        Self::Up
    }
}

