/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ErrorMessage {
    /// Error code
    #[serde(rename = "code")]
    pub code: i32,
    /// Error message
    #[serde(rename = "message")]
    pub message: String,
    /// Additional error details
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<std::collections::HashMap<String, serde_json::Value>>,
}

impl ErrorMessage {
    pub fn new(code: i32, message: String) -> ErrorMessage {
        ErrorMessage {
            code,
            message,
            details: None,
        }
    }
}

