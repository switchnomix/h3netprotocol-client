/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// InterfaceCounters : Interface counter statistics
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InterfaceCounters {
    #[serde(rename = "rxBytes", skip_serializing_if = "Option::is_none")]
    pub rx_bytes: Option<f64>,
    #[serde(rename = "rxPackets", skip_serializing_if = "Option::is_none")]
    pub rx_packets: Option<f64>,
    #[serde(rename = "rxErrors", skip_serializing_if = "Option::is_none")]
    pub rx_errors: Option<f64>,
    #[serde(rename = "rxDropped", skip_serializing_if = "Option::is_none")]
    pub rx_dropped: Option<f64>,
    #[serde(rename = "rxOverruns", skip_serializing_if = "Option::is_none")]
    pub rx_overruns: Option<f64>,
    #[serde(rename = "rxFrame", skip_serializing_if = "Option::is_none")]
    pub rx_frame: Option<f64>,
    #[serde(rename = "txBytes", skip_serializing_if = "Option::is_none")]
    pub tx_bytes: Option<f64>,
    #[serde(rename = "txPackets", skip_serializing_if = "Option::is_none")]
    pub tx_packets: Option<f64>,
    #[serde(rename = "txErrors", skip_serializing_if = "Option::is_none")]
    pub tx_errors: Option<f64>,
    #[serde(rename = "txDropped", skip_serializing_if = "Option::is_none")]
    pub tx_dropped: Option<f64>,
    #[serde(rename = "txOverruns", skip_serializing_if = "Option::is_none")]
    pub tx_overruns: Option<f64>,
    #[serde(rename = "txCollisions", skip_serializing_if = "Option::is_none")]
    pub tx_collisions: Option<f64>,
    #[serde(rename = "multicast", skip_serializing_if = "Option::is_none")]
    pub multicast: Option<f64>,
    #[serde(rename = "broadcast", skip_serializing_if = "Option::is_none")]
    pub broadcast: Option<f64>,
}

impl InterfaceCounters {
    /// Interface counter statistics
    pub fn new() -> InterfaceCounters {
        InterfaceCounters {
            rx_bytes: None,
            rx_packets: None,
            rx_errors: None,
            rx_dropped: None,
            rx_overruns: None,
            rx_frame: None,
            tx_bytes: None,
            tx_packets: None,
            tx_errors: None,
            tx_dropped: None,
            tx_overruns: None,
            tx_collisions: None,
            multicast: None,
            broadcast: None,
        }
    }
}

