/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EnvironmentalMetrics : Environmental monitoring metrics
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvironmentalMetrics {
    #[serde(rename = "temperature", skip_serializing_if = "Option::is_none")]
    pub temperature: Option<Box<models::EnvironmentalMetricsTemperature>>,
    #[serde(rename = "power", skip_serializing_if = "Option::is_none")]
    pub power: Option<Box<models::EnvironmentalMetricsPower>>,
    #[serde(rename = "fans", skip_serializing_if = "Option::is_none")]
    pub fans: Option<Vec<models::EnvironmentalMetricsFansInner>>,
}

impl EnvironmentalMetrics {
    /// Environmental monitoring metrics
    pub fn new() -> EnvironmentalMetrics {
        EnvironmentalMetrics {
            temperature: None,
            power: None,
            fans: None,
        }
    }
}

