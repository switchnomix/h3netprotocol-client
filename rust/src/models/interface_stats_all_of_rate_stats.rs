/*
 * H3Net Protocol API
 *
 * H3Net Protocol schema with various messages and configurations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: h3netprotocol@googlegroups.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// InterfaceStatsAllOfRateStats : Rate-based statistics
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InterfaceStatsAllOfRateStats {
    #[serde(rename = "inputRate", skip_serializing_if = "Option::is_none")]
    pub input_rate: Option<f64>,
    #[serde(rename = "outputRate", skip_serializing_if = "Option::is_none")]
    pub output_rate: Option<f64>,
    #[serde(rename = "inputPacketRate", skip_serializing_if = "Option::is_none")]
    pub input_packet_rate: Option<f64>,
    #[serde(rename = "outputPacketRate", skip_serializing_if = "Option::is_none")]
    pub output_packet_rate: Option<f64>,
}

impl InterfaceStatsAllOfRateStats {
    /// Rate-based statistics
    pub fn new() -> InterfaceStatsAllOfRateStats {
        InterfaceStatsAllOfRateStats {
            input_rate: None,
            output_rate: None,
            input_packet_rate: None,
            output_packet_rate: None,
        }
    }
}

