/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the ResourceMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceMetrics{}

// ResourceMetrics System resource metrics
type ResourceMetrics struct {
	Cpu *ResourceMetricsCpu `json:"cpu,omitempty"`
	Memory *ResourceMetricsMemory `json:"memory,omitempty"`
	Storage *ResourceMetricsStorage `json:"storage,omitempty"`
}

// NewResourceMetrics instantiates a new ResourceMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceMetrics() *ResourceMetrics {
	this := ResourceMetrics{}
	return &this
}

// NewResourceMetricsWithDefaults instantiates a new ResourceMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceMetricsWithDefaults() *ResourceMetrics {
	this := ResourceMetrics{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *ResourceMetrics) GetCpu() ResourceMetricsCpu {
	if o == nil || IsNil(o.Cpu) {
		var ret ResourceMetricsCpu
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMetrics) GetCpuOk() (*ResourceMetricsCpu, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *ResourceMetrics) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given ResourceMetricsCpu and assigns it to the Cpu field.
func (o *ResourceMetrics) SetCpu(v ResourceMetricsCpu) {
	o.Cpu = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *ResourceMetrics) GetMemory() ResourceMetricsMemory {
	if o == nil || IsNil(o.Memory) {
		var ret ResourceMetricsMemory
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMetrics) GetMemoryOk() (*ResourceMetricsMemory, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *ResourceMetrics) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given ResourceMetricsMemory and assigns it to the Memory field.
func (o *ResourceMetrics) SetMemory(v ResourceMetricsMemory) {
	o.Memory = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *ResourceMetrics) GetStorage() ResourceMetricsStorage {
	if o == nil || IsNil(o.Storage) {
		var ret ResourceMetricsStorage
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMetrics) GetStorageOk() (*ResourceMetricsStorage, bool) {
	if o == nil || IsNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *ResourceMetrics) HasStorage() bool {
	if o != nil && !IsNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given ResourceMetricsStorage and assigns it to the Storage field.
func (o *ResourceMetrics) SetStorage(v ResourceMetricsStorage) {
	o.Storage = &v
}

func (o ResourceMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	return toSerialize, nil
}

type NullableResourceMetrics struct {
	value *ResourceMetrics
	isSet bool
}

func (v NullableResourceMetrics) Get() *ResourceMetrics {
	return v.value
}

func (v *NullableResourceMetrics) Set(val *ResourceMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceMetrics(val *ResourceMetrics) *NullableResourceMetrics {
	return &NullableResourceMetrics{value: val, isSet: true}
}

func (v NullableResourceMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


