/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the InterfaceStatsAllOfRateStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceStatsAllOfRateStats{}

// InterfaceStatsAllOfRateStats Rate-based statistics
type InterfaceStatsAllOfRateStats struct {
	InputRate *float32 `json:"inputRate,omitempty"`
	OutputRate *float32 `json:"outputRate,omitempty"`
	InputPacketRate *float32 `json:"inputPacketRate,omitempty"`
	OutputPacketRate *float32 `json:"outputPacketRate,omitempty"`
}

// NewInterfaceStatsAllOfRateStats instantiates a new InterfaceStatsAllOfRateStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceStatsAllOfRateStats() *InterfaceStatsAllOfRateStats {
	this := InterfaceStatsAllOfRateStats{}
	return &this
}

// NewInterfaceStatsAllOfRateStatsWithDefaults instantiates a new InterfaceStatsAllOfRateStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceStatsAllOfRateStatsWithDefaults() *InterfaceStatsAllOfRateStats {
	this := InterfaceStatsAllOfRateStats{}
	return &this
}

// GetInputRate returns the InputRate field value if set, zero value otherwise.
func (o *InterfaceStatsAllOfRateStats) GetInputRate() float32 {
	if o == nil || IsNil(o.InputRate) {
		var ret float32
		return ret
	}
	return *o.InputRate
}

// GetInputRateOk returns a tuple with the InputRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsAllOfRateStats) GetInputRateOk() (*float32, bool) {
	if o == nil || IsNil(o.InputRate) {
		return nil, false
	}
	return o.InputRate, true
}

// HasInputRate returns a boolean if a field has been set.
func (o *InterfaceStatsAllOfRateStats) HasInputRate() bool {
	if o != nil && !IsNil(o.InputRate) {
		return true
	}

	return false
}

// SetInputRate gets a reference to the given float32 and assigns it to the InputRate field.
func (o *InterfaceStatsAllOfRateStats) SetInputRate(v float32) {
	o.InputRate = &v
}

// GetOutputRate returns the OutputRate field value if set, zero value otherwise.
func (o *InterfaceStatsAllOfRateStats) GetOutputRate() float32 {
	if o == nil || IsNil(o.OutputRate) {
		var ret float32
		return ret
	}
	return *o.OutputRate
}

// GetOutputRateOk returns a tuple with the OutputRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsAllOfRateStats) GetOutputRateOk() (*float32, bool) {
	if o == nil || IsNil(o.OutputRate) {
		return nil, false
	}
	return o.OutputRate, true
}

// HasOutputRate returns a boolean if a field has been set.
func (o *InterfaceStatsAllOfRateStats) HasOutputRate() bool {
	if o != nil && !IsNil(o.OutputRate) {
		return true
	}

	return false
}

// SetOutputRate gets a reference to the given float32 and assigns it to the OutputRate field.
func (o *InterfaceStatsAllOfRateStats) SetOutputRate(v float32) {
	o.OutputRate = &v
}

// GetInputPacketRate returns the InputPacketRate field value if set, zero value otherwise.
func (o *InterfaceStatsAllOfRateStats) GetInputPacketRate() float32 {
	if o == nil || IsNil(o.InputPacketRate) {
		var ret float32
		return ret
	}
	return *o.InputPacketRate
}

// GetInputPacketRateOk returns a tuple with the InputPacketRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsAllOfRateStats) GetInputPacketRateOk() (*float32, bool) {
	if o == nil || IsNil(o.InputPacketRate) {
		return nil, false
	}
	return o.InputPacketRate, true
}

// HasInputPacketRate returns a boolean if a field has been set.
func (o *InterfaceStatsAllOfRateStats) HasInputPacketRate() bool {
	if o != nil && !IsNil(o.InputPacketRate) {
		return true
	}

	return false
}

// SetInputPacketRate gets a reference to the given float32 and assigns it to the InputPacketRate field.
func (o *InterfaceStatsAllOfRateStats) SetInputPacketRate(v float32) {
	o.InputPacketRate = &v
}

// GetOutputPacketRate returns the OutputPacketRate field value if set, zero value otherwise.
func (o *InterfaceStatsAllOfRateStats) GetOutputPacketRate() float32 {
	if o == nil || IsNil(o.OutputPacketRate) {
		var ret float32
		return ret
	}
	return *o.OutputPacketRate
}

// GetOutputPacketRateOk returns a tuple with the OutputPacketRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceStatsAllOfRateStats) GetOutputPacketRateOk() (*float32, bool) {
	if o == nil || IsNil(o.OutputPacketRate) {
		return nil, false
	}
	return o.OutputPacketRate, true
}

// HasOutputPacketRate returns a boolean if a field has been set.
func (o *InterfaceStatsAllOfRateStats) HasOutputPacketRate() bool {
	if o != nil && !IsNil(o.OutputPacketRate) {
		return true
	}

	return false
}

// SetOutputPacketRate gets a reference to the given float32 and assigns it to the OutputPacketRate field.
func (o *InterfaceStatsAllOfRateStats) SetOutputPacketRate(v float32) {
	o.OutputPacketRate = &v
}

func (o InterfaceStatsAllOfRateStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceStatsAllOfRateStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InputRate) {
		toSerialize["inputRate"] = o.InputRate
	}
	if !IsNil(o.OutputRate) {
		toSerialize["outputRate"] = o.OutputRate
	}
	if !IsNil(o.InputPacketRate) {
		toSerialize["inputPacketRate"] = o.InputPacketRate
	}
	if !IsNil(o.OutputPacketRate) {
		toSerialize["outputPacketRate"] = o.OutputPacketRate
	}
	return toSerialize, nil
}

type NullableInterfaceStatsAllOfRateStats struct {
	value *InterfaceStatsAllOfRateStats
	isSet bool
}

func (v NullableInterfaceStatsAllOfRateStats) Get() *InterfaceStatsAllOfRateStats {
	return v.value
}

func (v *NullableInterfaceStatsAllOfRateStats) Set(val *InterfaceStatsAllOfRateStats) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceStatsAllOfRateStats) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceStatsAllOfRateStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceStatsAllOfRateStats(val *InterfaceStatsAllOfRateStats) *NullableInterfaceStatsAllOfRateStats {
	return &NullableInterfaceStatsAllOfRateStats{value: val, isSet: true}
}

func (v NullableInterfaceStatsAllOfRateStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceStatsAllOfRateStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


