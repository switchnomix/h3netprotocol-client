/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetDeviceInterfaces200ResponseValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceInterfaces200ResponseValue{}

// GetDeviceInterfaces200ResponseValue struct for GetDeviceInterfaces200ResponseValue
type GetDeviceInterfaces200ResponseValue struct {
	// Interface name/identifier
	Name string `json:"name"`
	// Human-readable interface description
	Description *string `json:"description,omitempty"`
	// Administrative state of the interface
	Enabled bool `json:"enabled"`
	Speed *InterfaceSpeed `json:"speed,omitempty"`
	// Interface type/media
	Type *string `json:"type,omitempty"`
	// Maximum Transmission Unit in bytes
	Mtu *int32 `json:"mtu,omitempty"`
	// MAC address in format XX:XX:XX:XX:XX:XX or XX-XX-XX-XX-XX-XX
	Mac *string `json:"mac,omitempty" validate:"regexp=^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"`
	State *InterfaceState `json:"state,omitempty"`
	AdminState *AdminState `json:"adminState,omitempty"`
	Primary IPAddressWithPrefix `json:"primary"`
	// Secondary IP addresses
	Secondary []IPAddressWithPrefix `json:"secondary,omitempty"`
	// Virtual IP addresses for VRRP/HSRP
	VirtualIPs []IPAddressWithPrefix `json:"virtualIPs,omitempty"`
	// Whether DHCP is enabled
	Dhcp *bool `json:"dhcp,omitempty"`
	// Whether IPv6 autoconfig is enabled
	Autoconfig *bool `json:"autoconfig,omitempty"`
}

type _GetDeviceInterfaces200ResponseValue GetDeviceInterfaces200ResponseValue

// NewGetDeviceInterfaces200ResponseValue instantiates a new GetDeviceInterfaces200ResponseValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceInterfaces200ResponseValue(name string, enabled bool, primary IPAddressWithPrefix) *GetDeviceInterfaces200ResponseValue {
	this := GetDeviceInterfaces200ResponseValue{}
	this.Name = name
	this.Enabled = enabled
	this.Primary = primary
	var dhcp bool = false
	this.Dhcp = &dhcp
	var autoconfig bool = false
	this.Autoconfig = &autoconfig
	return &this
}

// NewGetDeviceInterfaces200ResponseValueWithDefaults instantiates a new GetDeviceInterfaces200ResponseValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceInterfaces200ResponseValueWithDefaults() *GetDeviceInterfaces200ResponseValue {
	this := GetDeviceInterfaces200ResponseValue{}
	var dhcp bool = false
	this.Dhcp = &dhcp
	var autoconfig bool = false
	this.Autoconfig = &autoconfig
	return &this
}

// GetName returns the Name field value
func (o *GetDeviceInterfaces200ResponseValue) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetDeviceInterfaces200ResponseValue) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetDeviceInterfaces200ResponseValue) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *GetDeviceInterfaces200ResponseValue) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *GetDeviceInterfaces200ResponseValue) SetEnabled(v bool) {
	o.Enabled = v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetSpeed() InterfaceSpeed {
	if o == nil || IsNil(o.Speed) {
		var ret InterfaceSpeed
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetSpeedOk() (*InterfaceSpeed, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given InterfaceSpeed and assigns it to the Speed field.
func (o *GetDeviceInterfaces200ResponseValue) SetSpeed(v InterfaceSpeed) {
	o.Speed = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetDeviceInterfaces200ResponseValue) SetType(v string) {
	o.Type = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu) {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetMtuOk() (*int32, bool) {
	if o == nil || IsNil(o.Mtu) {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasMtu() bool {
	if o != nil && !IsNil(o.Mtu) {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *GetDeviceInterfaces200ResponseValue) SetMtu(v int32) {
	o.Mtu = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *GetDeviceInterfaces200ResponseValue) SetMac(v string) {
	o.Mac = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetState() InterfaceState {
	if o == nil || IsNil(o.State) {
		var ret InterfaceState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetStateOk() (*InterfaceState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given InterfaceState and assigns it to the State field.
func (o *GetDeviceInterfaces200ResponseValue) SetState(v InterfaceState) {
	o.State = &v
}

// GetAdminState returns the AdminState field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetAdminState() AdminState {
	if o == nil || IsNil(o.AdminState) {
		var ret AdminState
		return ret
	}
	return *o.AdminState
}

// GetAdminStateOk returns a tuple with the AdminState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetAdminStateOk() (*AdminState, bool) {
	if o == nil || IsNil(o.AdminState) {
		return nil, false
	}
	return o.AdminState, true
}

// HasAdminState returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasAdminState() bool {
	if o != nil && !IsNil(o.AdminState) {
		return true
	}

	return false
}

// SetAdminState gets a reference to the given AdminState and assigns it to the AdminState field.
func (o *GetDeviceInterfaces200ResponseValue) SetAdminState(v AdminState) {
	o.AdminState = &v
}

// GetPrimary returns the Primary field value
func (o *GetDeviceInterfaces200ResponseValue) GetPrimary() IPAddressWithPrefix {
	if o == nil {
		var ret IPAddressWithPrefix
		return ret
	}

	return o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetPrimaryOk() (*IPAddressWithPrefix, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Primary, true
}

// SetPrimary sets field value
func (o *GetDeviceInterfaces200ResponseValue) SetPrimary(v IPAddressWithPrefix) {
	o.Primary = v
}

// GetSecondary returns the Secondary field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetSecondary() []IPAddressWithPrefix {
	if o == nil || IsNil(o.Secondary) {
		var ret []IPAddressWithPrefix
		return ret
	}
	return o.Secondary
}

// GetSecondaryOk returns a tuple with the Secondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetSecondaryOk() ([]IPAddressWithPrefix, bool) {
	if o == nil || IsNil(o.Secondary) {
		return nil, false
	}
	return o.Secondary, true
}

// HasSecondary returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasSecondary() bool {
	if o != nil && !IsNil(o.Secondary) {
		return true
	}

	return false
}

// SetSecondary gets a reference to the given []IPAddressWithPrefix and assigns it to the Secondary field.
func (o *GetDeviceInterfaces200ResponseValue) SetSecondary(v []IPAddressWithPrefix) {
	o.Secondary = v
}

// GetVirtualIPs returns the VirtualIPs field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetVirtualIPs() []IPAddressWithPrefix {
	if o == nil || IsNil(o.VirtualIPs) {
		var ret []IPAddressWithPrefix
		return ret
	}
	return o.VirtualIPs
}

// GetVirtualIPsOk returns a tuple with the VirtualIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetVirtualIPsOk() ([]IPAddressWithPrefix, bool) {
	if o == nil || IsNil(o.VirtualIPs) {
		return nil, false
	}
	return o.VirtualIPs, true
}

// HasVirtualIPs returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasVirtualIPs() bool {
	if o != nil && !IsNil(o.VirtualIPs) {
		return true
	}

	return false
}

// SetVirtualIPs gets a reference to the given []IPAddressWithPrefix and assigns it to the VirtualIPs field.
func (o *GetDeviceInterfaces200ResponseValue) SetVirtualIPs(v []IPAddressWithPrefix) {
	o.VirtualIPs = v
}

// GetDhcp returns the Dhcp field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetDhcp() bool {
	if o == nil || IsNil(o.Dhcp) {
		var ret bool
		return ret
	}
	return *o.Dhcp
}

// GetDhcpOk returns a tuple with the Dhcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetDhcpOk() (*bool, bool) {
	if o == nil || IsNil(o.Dhcp) {
		return nil, false
	}
	return o.Dhcp, true
}

// HasDhcp returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasDhcp() bool {
	if o != nil && !IsNil(o.Dhcp) {
		return true
	}

	return false
}

// SetDhcp gets a reference to the given bool and assigns it to the Dhcp field.
func (o *GetDeviceInterfaces200ResponseValue) SetDhcp(v bool) {
	o.Dhcp = &v
}

// GetAutoconfig returns the Autoconfig field value if set, zero value otherwise.
func (o *GetDeviceInterfaces200ResponseValue) GetAutoconfig() bool {
	if o == nil || IsNil(o.Autoconfig) {
		var ret bool
		return ret
	}
	return *o.Autoconfig
}

// GetAutoconfigOk returns a tuple with the Autoconfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceInterfaces200ResponseValue) GetAutoconfigOk() (*bool, bool) {
	if o == nil || IsNil(o.Autoconfig) {
		return nil, false
	}
	return o.Autoconfig, true
}

// HasAutoconfig returns a boolean if a field has been set.
func (o *GetDeviceInterfaces200ResponseValue) HasAutoconfig() bool {
	if o != nil && !IsNil(o.Autoconfig) {
		return true
	}

	return false
}

// SetAutoconfig gets a reference to the given bool and assigns it to the Autoconfig field.
func (o *GetDeviceInterfaces200ResponseValue) SetAutoconfig(v bool) {
	o.Autoconfig = &v
}

func (o GetDeviceInterfaces200ResponseValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceInterfaces200ResponseValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Mtu) {
		toSerialize["mtu"] = o.Mtu
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.AdminState) {
		toSerialize["adminState"] = o.AdminState
	}
	toSerialize["primary"] = o.Primary
	if !IsNil(o.Secondary) {
		toSerialize["secondary"] = o.Secondary
	}
	if !IsNil(o.VirtualIPs) {
		toSerialize["virtualIPs"] = o.VirtualIPs
	}
	if !IsNil(o.Dhcp) {
		toSerialize["dhcp"] = o.Dhcp
	}
	if !IsNil(o.Autoconfig) {
		toSerialize["autoconfig"] = o.Autoconfig
	}
	return toSerialize, nil
}

func (o *GetDeviceInterfaces200ResponseValue) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"enabled",
		"primary",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetDeviceInterfaces200ResponseValue := _GetDeviceInterfaces200ResponseValue{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetDeviceInterfaces200ResponseValue)

	if err != nil {
		return err
	}

	*o = GetDeviceInterfaces200ResponseValue(varGetDeviceInterfaces200ResponseValue)

	return err
}

type NullableGetDeviceInterfaces200ResponseValue struct {
	value *GetDeviceInterfaces200ResponseValue
	isSet bool
}

func (v NullableGetDeviceInterfaces200ResponseValue) Get() *GetDeviceInterfaces200ResponseValue {
	return v.value
}

func (v *NullableGetDeviceInterfaces200ResponseValue) Set(val *GetDeviceInterfaces200ResponseValue) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceInterfaces200ResponseValue) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceInterfaces200ResponseValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceInterfaces200ResponseValue(val *GetDeviceInterfaces200ResponseValue) *NullableGetDeviceInterfaces200ResponseValue {
	return &NullableGetDeviceInterfaces200ResponseValue{value: val, isSet: true}
}

func (v NullableGetDeviceInterfaces200ResponseValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceInterfaces200ResponseValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


