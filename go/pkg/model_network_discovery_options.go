/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the NetworkDiscoveryOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkDiscoveryOptions{}

// NetworkDiscoveryOptions struct for NetworkDiscoveryOptions
type NetworkDiscoveryOptions struct {
	// Discovery depth limit
	Depth *int32 `json:"depth,omitempty"`
	// Specific protocols to use for discovery
	Protocols []string `json:"protocols,omitempty"`
	// Discovery timeout in seconds
	Timeout *int32 `json:"timeout,omitempty"`
	// Number of discovery retries
	Retries *int32 `json:"retries,omitempty"`
	Filters *NetworkDiscoveryOptionsFilters `json:"filters,omitempty"`
}

// NewNetworkDiscoveryOptions instantiates a new NetworkDiscoveryOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDiscoveryOptions() *NetworkDiscoveryOptions {
	this := NetworkDiscoveryOptions{}
	return &this
}

// NewNetworkDiscoveryOptionsWithDefaults instantiates a new NetworkDiscoveryOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDiscoveryOptionsWithDefaults() *NetworkDiscoveryOptions {
	this := NetworkDiscoveryOptions{}
	return &this
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *NetworkDiscoveryOptions) GetDepth() int32 {
	if o == nil || IsNil(o.Depth) {
		var ret int32
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiscoveryOptions) GetDepthOk() (*int32, bool) {
	if o == nil || IsNil(o.Depth) {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *NetworkDiscoveryOptions) HasDepth() bool {
	if o != nil && !IsNil(o.Depth) {
		return true
	}

	return false
}

// SetDepth gets a reference to the given int32 and assigns it to the Depth field.
func (o *NetworkDiscoveryOptions) SetDepth(v int32) {
	o.Depth = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *NetworkDiscoveryOptions) GetProtocols() []string {
	if o == nil || IsNil(o.Protocols) {
		var ret []string
		return ret
	}
	return o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiscoveryOptions) GetProtocolsOk() ([]string, bool) {
	if o == nil || IsNil(o.Protocols) {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *NetworkDiscoveryOptions) HasProtocols() bool {
	if o != nil && !IsNil(o.Protocols) {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given []string and assigns it to the Protocols field.
func (o *NetworkDiscoveryOptions) SetProtocols(v []string) {
	o.Protocols = v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *NetworkDiscoveryOptions) GetTimeout() int32 {
	if o == nil || IsNil(o.Timeout) {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiscoveryOptions) GetTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *NetworkDiscoveryOptions) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *NetworkDiscoveryOptions) SetTimeout(v int32) {
	o.Timeout = &v
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *NetworkDiscoveryOptions) GetRetries() int32 {
	if o == nil || IsNil(o.Retries) {
		var ret int32
		return ret
	}
	return *o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiscoveryOptions) GetRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.Retries) {
		return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *NetworkDiscoveryOptions) HasRetries() bool {
	if o != nil && !IsNil(o.Retries) {
		return true
	}

	return false
}

// SetRetries gets a reference to the given int32 and assigns it to the Retries field.
func (o *NetworkDiscoveryOptions) SetRetries(v int32) {
	o.Retries = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *NetworkDiscoveryOptions) GetFilters() NetworkDiscoveryOptionsFilters {
	if o == nil || IsNil(o.Filters) {
		var ret NetworkDiscoveryOptionsFilters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiscoveryOptions) GetFiltersOk() (*NetworkDiscoveryOptionsFilters, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *NetworkDiscoveryOptions) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given NetworkDiscoveryOptionsFilters and assigns it to the Filters field.
func (o *NetworkDiscoveryOptions) SetFilters(v NetworkDiscoveryOptionsFilters) {
	o.Filters = &v
}

func (o NetworkDiscoveryOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkDiscoveryOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Depth) {
		toSerialize["depth"] = o.Depth
	}
	if !IsNil(o.Protocols) {
		toSerialize["protocols"] = o.Protocols
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.Retries) {
		toSerialize["retries"] = o.Retries
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	return toSerialize, nil
}

type NullableNetworkDiscoveryOptions struct {
	value *NetworkDiscoveryOptions
	isSet bool
}

func (v NullableNetworkDiscoveryOptions) Get() *NetworkDiscoveryOptions {
	return v.value
}

func (v *NullableNetworkDiscoveryOptions) Set(val *NetworkDiscoveryOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDiscoveryOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDiscoveryOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDiscoveryOptions(val *NetworkDiscoveryOptions) *NullableNetworkDiscoveryOptions {
	return &NullableNetworkDiscoveryOptions{value: val, isSet: true}
}

func (v NullableNetworkDiscoveryOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDiscoveryOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


