/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the NetworkDiscoveryResponseMessageAllOfTopology type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkDiscoveryResponseMessageAllOfTopology{}

// NetworkDiscoveryResponseMessageAllOfTopology Network topology information
type NetworkDiscoveryResponseMessageAllOfTopology struct {
	Links []NetworkDiscoveryResponseMessageAllOfTopologyLinks `json:"links,omitempty"`
}

// NewNetworkDiscoveryResponseMessageAllOfTopology instantiates a new NetworkDiscoveryResponseMessageAllOfTopology object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDiscoveryResponseMessageAllOfTopology() *NetworkDiscoveryResponseMessageAllOfTopology {
	this := NetworkDiscoveryResponseMessageAllOfTopology{}
	return &this
}

// NewNetworkDiscoveryResponseMessageAllOfTopologyWithDefaults instantiates a new NetworkDiscoveryResponseMessageAllOfTopology object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDiscoveryResponseMessageAllOfTopologyWithDefaults() *NetworkDiscoveryResponseMessageAllOfTopology {
	this := NetworkDiscoveryResponseMessageAllOfTopology{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *NetworkDiscoveryResponseMessageAllOfTopology) GetLinks() []NetworkDiscoveryResponseMessageAllOfTopologyLinks {
	if o == nil || IsNil(o.Links) {
		var ret []NetworkDiscoveryResponseMessageAllOfTopologyLinks
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiscoveryResponseMessageAllOfTopology) GetLinksOk() ([]NetworkDiscoveryResponseMessageAllOfTopologyLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *NetworkDiscoveryResponseMessageAllOfTopology) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []NetworkDiscoveryResponseMessageAllOfTopologyLinks and assigns it to the Links field.
func (o *NetworkDiscoveryResponseMessageAllOfTopology) SetLinks(v []NetworkDiscoveryResponseMessageAllOfTopologyLinks) {
	o.Links = v
}

func (o NetworkDiscoveryResponseMessageAllOfTopology) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkDiscoveryResponseMessageAllOfTopology) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

type NullableNetworkDiscoveryResponseMessageAllOfTopology struct {
	value *NetworkDiscoveryResponseMessageAllOfTopology
	isSet bool
}

func (v NullableNetworkDiscoveryResponseMessageAllOfTopology) Get() *NetworkDiscoveryResponseMessageAllOfTopology {
	return v.value
}

func (v *NullableNetworkDiscoveryResponseMessageAllOfTopology) Set(val *NetworkDiscoveryResponseMessageAllOfTopology) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDiscoveryResponseMessageAllOfTopology) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDiscoveryResponseMessageAllOfTopology) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDiscoveryResponseMessageAllOfTopology(val *NetworkDiscoveryResponseMessageAllOfTopology) *NullableNetworkDiscoveryResponseMessageAllOfTopology {
	return &NullableNetworkDiscoveryResponseMessageAllOfTopology{value: val, isSet: true}
}

func (v NullableNetworkDiscoveryResponseMessageAllOfTopology) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDiscoveryResponseMessageAllOfTopology) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


