/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the DeviceMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceMetrics{}

// DeviceMetrics struct for DeviceMetrics
type DeviceMetrics struct {
	VlanStats map[string]interface{} `json:"vlanStats,omitempty"`
	RouteStats map[string]interface{} `json:"routeStats,omitempty"`
	FirewallHits *int32 `json:"firewallHits,omitempty"`
	Resources *ResourceMetrics `json:"resources,omitempty"`
	Environmental *EnvironmentalMetrics `json:"environmental,omitempty"`
	// Vendor-specific or custom metrics
	CustomMetrics map[string]interface{} `json:"customMetrics,omitempty"`
}

// NewDeviceMetrics instantiates a new DeviceMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceMetrics() *DeviceMetrics {
	this := DeviceMetrics{}
	return &this
}

// NewDeviceMetricsWithDefaults instantiates a new DeviceMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceMetricsWithDefaults() *DeviceMetrics {
	this := DeviceMetrics{}
	return &this
}

// GetVlanStats returns the VlanStats field value if set, zero value otherwise.
func (o *DeviceMetrics) GetVlanStats() map[string]interface{} {
	if o == nil || IsNil(o.VlanStats) {
		var ret map[string]interface{}
		return ret
	}
	return o.VlanStats
}

// GetVlanStatsOk returns a tuple with the VlanStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceMetrics) GetVlanStatsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.VlanStats) {
		return map[string]interface{}{}, false
	}
	return o.VlanStats, true
}

// HasVlanStats returns a boolean if a field has been set.
func (o *DeviceMetrics) HasVlanStats() bool {
	if o != nil && !IsNil(o.VlanStats) {
		return true
	}

	return false
}

// SetVlanStats gets a reference to the given map[string]interface{} and assigns it to the VlanStats field.
func (o *DeviceMetrics) SetVlanStats(v map[string]interface{}) {
	o.VlanStats = v
}

// GetRouteStats returns the RouteStats field value if set, zero value otherwise.
func (o *DeviceMetrics) GetRouteStats() map[string]interface{} {
	if o == nil || IsNil(o.RouteStats) {
		var ret map[string]interface{}
		return ret
	}
	return o.RouteStats
}

// GetRouteStatsOk returns a tuple with the RouteStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceMetrics) GetRouteStatsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RouteStats) {
		return map[string]interface{}{}, false
	}
	return o.RouteStats, true
}

// HasRouteStats returns a boolean if a field has been set.
func (o *DeviceMetrics) HasRouteStats() bool {
	if o != nil && !IsNil(o.RouteStats) {
		return true
	}

	return false
}

// SetRouteStats gets a reference to the given map[string]interface{} and assigns it to the RouteStats field.
func (o *DeviceMetrics) SetRouteStats(v map[string]interface{}) {
	o.RouteStats = v
}

// GetFirewallHits returns the FirewallHits field value if set, zero value otherwise.
func (o *DeviceMetrics) GetFirewallHits() int32 {
	if o == nil || IsNil(o.FirewallHits) {
		var ret int32
		return ret
	}
	return *o.FirewallHits
}

// GetFirewallHitsOk returns a tuple with the FirewallHits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceMetrics) GetFirewallHitsOk() (*int32, bool) {
	if o == nil || IsNil(o.FirewallHits) {
		return nil, false
	}
	return o.FirewallHits, true
}

// HasFirewallHits returns a boolean if a field has been set.
func (o *DeviceMetrics) HasFirewallHits() bool {
	if o != nil && !IsNil(o.FirewallHits) {
		return true
	}

	return false
}

// SetFirewallHits gets a reference to the given int32 and assigns it to the FirewallHits field.
func (o *DeviceMetrics) SetFirewallHits(v int32) {
	o.FirewallHits = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *DeviceMetrics) GetResources() ResourceMetrics {
	if o == nil || IsNil(o.Resources) {
		var ret ResourceMetrics
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceMetrics) GetResourcesOk() (*ResourceMetrics, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *DeviceMetrics) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given ResourceMetrics and assigns it to the Resources field.
func (o *DeviceMetrics) SetResources(v ResourceMetrics) {
	o.Resources = &v
}

// GetEnvironmental returns the Environmental field value if set, zero value otherwise.
func (o *DeviceMetrics) GetEnvironmental() EnvironmentalMetrics {
	if o == nil || IsNil(o.Environmental) {
		var ret EnvironmentalMetrics
		return ret
	}
	return *o.Environmental
}

// GetEnvironmentalOk returns a tuple with the Environmental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceMetrics) GetEnvironmentalOk() (*EnvironmentalMetrics, bool) {
	if o == nil || IsNil(o.Environmental) {
		return nil, false
	}
	return o.Environmental, true
}

// HasEnvironmental returns a boolean if a field has been set.
func (o *DeviceMetrics) HasEnvironmental() bool {
	if o != nil && !IsNil(o.Environmental) {
		return true
	}

	return false
}

// SetEnvironmental gets a reference to the given EnvironmentalMetrics and assigns it to the Environmental field.
func (o *DeviceMetrics) SetEnvironmental(v EnvironmentalMetrics) {
	o.Environmental = &v
}

// GetCustomMetrics returns the CustomMetrics field value if set, zero value otherwise.
func (o *DeviceMetrics) GetCustomMetrics() map[string]interface{} {
	if o == nil || IsNil(o.CustomMetrics) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomMetrics
}

// GetCustomMetricsOk returns a tuple with the CustomMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceMetrics) GetCustomMetricsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomMetrics) {
		return map[string]interface{}{}, false
	}
	return o.CustomMetrics, true
}

// HasCustomMetrics returns a boolean if a field has been set.
func (o *DeviceMetrics) HasCustomMetrics() bool {
	if o != nil && !IsNil(o.CustomMetrics) {
		return true
	}

	return false
}

// SetCustomMetrics gets a reference to the given map[string]interface{} and assigns it to the CustomMetrics field.
func (o *DeviceMetrics) SetCustomMetrics(v map[string]interface{}) {
	o.CustomMetrics = v
}

func (o DeviceMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VlanStats) {
		toSerialize["vlanStats"] = o.VlanStats
	}
	if !IsNil(o.RouteStats) {
		toSerialize["routeStats"] = o.RouteStats
	}
	if !IsNil(o.FirewallHits) {
		toSerialize["firewallHits"] = o.FirewallHits
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Environmental) {
		toSerialize["environmental"] = o.Environmental
	}
	if !IsNil(o.CustomMetrics) {
		toSerialize["customMetrics"] = o.CustomMetrics
	}
	return toSerialize, nil
}

type NullableDeviceMetrics struct {
	value *DeviceMetrics
	isSet bool
}

func (v NullableDeviceMetrics) Get() *DeviceMetrics {
	return v.value
}

func (v *NullableDeviceMetrics) Set(val *DeviceMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceMetrics(val *DeviceMetrics) *NullableDeviceMetrics {
	return &NullableDeviceMetrics{value: val, isSet: true}
}

func (v NullableDeviceMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


