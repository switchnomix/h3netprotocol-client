/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the QoSStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QoSStats{}

// QoSStats QoS-related statistics
type QoSStats struct {
	QueueStats *map[string]QoSStatsQueueStatsValue `json:"queueStats,omitempty"`
	Dscp *map[string]float32 `json:"dscp,omitempty"`
}

// NewQoSStats instantiates a new QoSStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQoSStats() *QoSStats {
	this := QoSStats{}
	return &this
}

// NewQoSStatsWithDefaults instantiates a new QoSStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQoSStatsWithDefaults() *QoSStats {
	this := QoSStats{}
	return &this
}

// GetQueueStats returns the QueueStats field value if set, zero value otherwise.
func (o *QoSStats) GetQueueStats() map[string]QoSStatsQueueStatsValue {
	if o == nil || IsNil(o.QueueStats) {
		var ret map[string]QoSStatsQueueStatsValue
		return ret
	}
	return *o.QueueStats
}

// GetQueueStatsOk returns a tuple with the QueueStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QoSStats) GetQueueStatsOk() (*map[string]QoSStatsQueueStatsValue, bool) {
	if o == nil || IsNil(o.QueueStats) {
		return nil, false
	}
	return o.QueueStats, true
}

// HasQueueStats returns a boolean if a field has been set.
func (o *QoSStats) HasQueueStats() bool {
	if o != nil && !IsNil(o.QueueStats) {
		return true
	}

	return false
}

// SetQueueStats gets a reference to the given map[string]QoSStatsQueueStatsValue and assigns it to the QueueStats field.
func (o *QoSStats) SetQueueStats(v map[string]QoSStatsQueueStatsValue) {
	o.QueueStats = &v
}

// GetDscp returns the Dscp field value if set, zero value otherwise.
func (o *QoSStats) GetDscp() map[string]float32 {
	if o == nil || IsNil(o.Dscp) {
		var ret map[string]float32
		return ret
	}
	return *o.Dscp
}

// GetDscpOk returns a tuple with the Dscp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QoSStats) GetDscpOk() (*map[string]float32, bool) {
	if o == nil || IsNil(o.Dscp) {
		return nil, false
	}
	return o.Dscp, true
}

// HasDscp returns a boolean if a field has been set.
func (o *QoSStats) HasDscp() bool {
	if o != nil && !IsNil(o.Dscp) {
		return true
	}

	return false
}

// SetDscp gets a reference to the given map[string]float32 and assigns it to the Dscp field.
func (o *QoSStats) SetDscp(v map[string]float32) {
	o.Dscp = &v
}

func (o QoSStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QoSStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QueueStats) {
		toSerialize["queueStats"] = o.QueueStats
	}
	if !IsNil(o.Dscp) {
		toSerialize["dscp"] = o.Dscp
	}
	return toSerialize, nil
}

type NullableQoSStats struct {
	value *QoSStats
	isSet bool
}

func (v NullableQoSStats) Get() *QoSStats {
	return v.value
}

func (v *NullableQoSStats) Set(val *QoSStats) {
	v.value = val
	v.isSet = true
}

func (v NullableQoSStats) IsSet() bool {
	return v.isSet
}

func (v *NullableQoSStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQoSStats(val *QoSStats) *NullableQoSStats {
	return &NullableQoSStats{value: val, isSet: true}
}

func (v NullableQoSStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQoSStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


