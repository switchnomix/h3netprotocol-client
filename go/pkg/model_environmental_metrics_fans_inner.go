/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the EnvironmentalMetricsFansInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentalMetricsFansInner{}

// EnvironmentalMetricsFansInner struct for EnvironmentalMetricsFansInner
type EnvironmentalMetricsFansInner struct {
	Id *string `json:"id,omitempty"`
	Speed *float32 `json:"speed,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewEnvironmentalMetricsFansInner instantiates a new EnvironmentalMetricsFansInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentalMetricsFansInner() *EnvironmentalMetricsFansInner {
	this := EnvironmentalMetricsFansInner{}
	return &this
}

// NewEnvironmentalMetricsFansInnerWithDefaults instantiates a new EnvironmentalMetricsFansInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentalMetricsFansInnerWithDefaults() *EnvironmentalMetricsFansInner {
	this := EnvironmentalMetricsFansInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnvironmentalMetricsFansInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentalMetricsFansInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnvironmentalMetricsFansInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EnvironmentalMetricsFansInner) SetId(v string) {
	o.Id = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *EnvironmentalMetricsFansInner) GetSpeed() float32 {
	if o == nil || IsNil(o.Speed) {
		var ret float32
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentalMetricsFansInner) GetSpeedOk() (*float32, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *EnvironmentalMetricsFansInner) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given float32 and assigns it to the Speed field.
func (o *EnvironmentalMetricsFansInner) SetSpeed(v float32) {
	o.Speed = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EnvironmentalMetricsFansInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentalMetricsFansInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EnvironmentalMetricsFansInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EnvironmentalMetricsFansInner) SetStatus(v string) {
	o.Status = &v
}

func (o EnvironmentalMetricsFansInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentalMetricsFansInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableEnvironmentalMetricsFansInner struct {
	value *EnvironmentalMetricsFansInner
	isSet bool
}

func (v NullableEnvironmentalMetricsFansInner) Get() *EnvironmentalMetricsFansInner {
	return v.value
}

func (v *NullableEnvironmentalMetricsFansInner) Set(val *EnvironmentalMetricsFansInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentalMetricsFansInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentalMetricsFansInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentalMetricsFansInner(val *EnvironmentalMetricsFansInner) *NullableEnvironmentalMetricsFansInner {
	return &NullableEnvironmentalMetricsFansInner{value: val, isSet: true}
}

func (v NullableEnvironmentalMetricsFansInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentalMetricsFansInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


