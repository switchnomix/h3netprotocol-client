/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetBulkMetricsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBulkMetricsRequest{}

// GetBulkMetricsRequest struct for GetBulkMetricsRequest
type GetBulkMetricsRequest struct {
	// List of device IDs
	Devices []string `json:"devices"`
	MetricTypes []string `json:"metricTypes,omitempty"`
}

type _GetBulkMetricsRequest GetBulkMetricsRequest

// NewGetBulkMetricsRequest instantiates a new GetBulkMetricsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBulkMetricsRequest(devices []string) *GetBulkMetricsRequest {
	this := GetBulkMetricsRequest{}
	this.Devices = devices
	return &this
}

// NewGetBulkMetricsRequestWithDefaults instantiates a new GetBulkMetricsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBulkMetricsRequestWithDefaults() *GetBulkMetricsRequest {
	this := GetBulkMetricsRequest{}
	return &this
}

// GetDevices returns the Devices field value
func (o *GetBulkMetricsRequest) GetDevices() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value
// and a boolean to check if the value has been set.
func (o *GetBulkMetricsRequest) GetDevicesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Devices, true
}

// SetDevices sets field value
func (o *GetBulkMetricsRequest) SetDevices(v []string) {
	o.Devices = v
}

// GetMetricTypes returns the MetricTypes field value if set, zero value otherwise.
func (o *GetBulkMetricsRequest) GetMetricTypes() []string {
	if o == nil || IsNil(o.MetricTypes) {
		var ret []string
		return ret
	}
	return o.MetricTypes
}

// GetMetricTypesOk returns a tuple with the MetricTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBulkMetricsRequest) GetMetricTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.MetricTypes) {
		return nil, false
	}
	return o.MetricTypes, true
}

// HasMetricTypes returns a boolean if a field has been set.
func (o *GetBulkMetricsRequest) HasMetricTypes() bool {
	if o != nil && !IsNil(o.MetricTypes) {
		return true
	}

	return false
}

// SetMetricTypes gets a reference to the given []string and assigns it to the MetricTypes field.
func (o *GetBulkMetricsRequest) SetMetricTypes(v []string) {
	o.MetricTypes = v
}

func (o GetBulkMetricsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBulkMetricsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["devices"] = o.Devices
	if !IsNil(o.MetricTypes) {
		toSerialize["metricTypes"] = o.MetricTypes
	}
	return toSerialize, nil
}

func (o *GetBulkMetricsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"devices",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetBulkMetricsRequest := _GetBulkMetricsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetBulkMetricsRequest)

	if err != nil {
		return err
	}

	*o = GetBulkMetricsRequest(varGetBulkMetricsRequest)

	return err
}

type NullableGetBulkMetricsRequest struct {
	value *GetBulkMetricsRequest
	isSet bool
}

func (v NullableGetBulkMetricsRequest) Get() *GetBulkMetricsRequest {
	return v.value
}

func (v *NullableGetBulkMetricsRequest) Set(val *GetBulkMetricsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBulkMetricsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBulkMetricsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBulkMetricsRequest(val *GetBulkMetricsRequest) *NullableGetBulkMetricsRequest {
	return &NullableGetBulkMetricsRequest{value: val, isSet: true}
}

func (v NullableGetBulkMetricsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBulkMetricsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


