/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the Capabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Capabilities{}

// Capabilities Device capabilities and features
type Capabilities struct {
	RoutingSupport *bool `json:"routingSupport,omitempty"`
	FirewallSupport *bool `json:"firewallSupport,omitempty"`
	VpnSupport *bool `json:"vpnSupport,omitempty"`
	LoadBalancing *bool `json:"loadBalancing,omitempty"`
	QosSupport *bool `json:"qosSupport,omitempty"`
	Ipv6Support *bool `json:"ipv6Support,omitempty"`
	MplsSupport *bool `json:"mplsSupport,omitempty"`
	SflowSupport *bool `json:"sflowSupport,omitempty"`
	NetflowSupport *bool `json:"netflowSupport,omitempty"`
	Features *map[string]bool `json:"features,omitempty"`
	SupportedProtocols []string `json:"supportedProtocols,omitempty"`
	HardwareCapabilities *CapabilitiesHardwareCapabilities `json:"hardwareCapabilities,omitempty"`
}

// NewCapabilities instantiates a new Capabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapabilities() *Capabilities {
	this := Capabilities{}
	return &this
}

// NewCapabilitiesWithDefaults instantiates a new Capabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapabilitiesWithDefaults() *Capabilities {
	this := Capabilities{}
	return &this
}

// GetRoutingSupport returns the RoutingSupport field value if set, zero value otherwise.
func (o *Capabilities) GetRoutingSupport() bool {
	if o == nil || IsNil(o.RoutingSupport) {
		var ret bool
		return ret
	}
	return *o.RoutingSupport
}

// GetRoutingSupportOk returns a tuple with the RoutingSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetRoutingSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.RoutingSupport) {
		return nil, false
	}
	return o.RoutingSupport, true
}

// HasRoutingSupport returns a boolean if a field has been set.
func (o *Capabilities) HasRoutingSupport() bool {
	if o != nil && !IsNil(o.RoutingSupport) {
		return true
	}

	return false
}

// SetRoutingSupport gets a reference to the given bool and assigns it to the RoutingSupport field.
func (o *Capabilities) SetRoutingSupport(v bool) {
	o.RoutingSupport = &v
}

// GetFirewallSupport returns the FirewallSupport field value if set, zero value otherwise.
func (o *Capabilities) GetFirewallSupport() bool {
	if o == nil || IsNil(o.FirewallSupport) {
		var ret bool
		return ret
	}
	return *o.FirewallSupport
}

// GetFirewallSupportOk returns a tuple with the FirewallSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetFirewallSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.FirewallSupport) {
		return nil, false
	}
	return o.FirewallSupport, true
}

// HasFirewallSupport returns a boolean if a field has been set.
func (o *Capabilities) HasFirewallSupport() bool {
	if o != nil && !IsNil(o.FirewallSupport) {
		return true
	}

	return false
}

// SetFirewallSupport gets a reference to the given bool and assigns it to the FirewallSupport field.
func (o *Capabilities) SetFirewallSupport(v bool) {
	o.FirewallSupport = &v
}

// GetVpnSupport returns the VpnSupport field value if set, zero value otherwise.
func (o *Capabilities) GetVpnSupport() bool {
	if o == nil || IsNil(o.VpnSupport) {
		var ret bool
		return ret
	}
	return *o.VpnSupport
}

// GetVpnSupportOk returns a tuple with the VpnSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetVpnSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.VpnSupport) {
		return nil, false
	}
	return o.VpnSupport, true
}

// HasVpnSupport returns a boolean if a field has been set.
func (o *Capabilities) HasVpnSupport() bool {
	if o != nil && !IsNil(o.VpnSupport) {
		return true
	}

	return false
}

// SetVpnSupport gets a reference to the given bool and assigns it to the VpnSupport field.
func (o *Capabilities) SetVpnSupport(v bool) {
	o.VpnSupport = &v
}

// GetLoadBalancing returns the LoadBalancing field value if set, zero value otherwise.
func (o *Capabilities) GetLoadBalancing() bool {
	if o == nil || IsNil(o.LoadBalancing) {
		var ret bool
		return ret
	}
	return *o.LoadBalancing
}

// GetLoadBalancingOk returns a tuple with the LoadBalancing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetLoadBalancingOk() (*bool, bool) {
	if o == nil || IsNil(o.LoadBalancing) {
		return nil, false
	}
	return o.LoadBalancing, true
}

// HasLoadBalancing returns a boolean if a field has been set.
func (o *Capabilities) HasLoadBalancing() bool {
	if o != nil && !IsNil(o.LoadBalancing) {
		return true
	}

	return false
}

// SetLoadBalancing gets a reference to the given bool and assigns it to the LoadBalancing field.
func (o *Capabilities) SetLoadBalancing(v bool) {
	o.LoadBalancing = &v
}

// GetQosSupport returns the QosSupport field value if set, zero value otherwise.
func (o *Capabilities) GetQosSupport() bool {
	if o == nil || IsNil(o.QosSupport) {
		var ret bool
		return ret
	}
	return *o.QosSupport
}

// GetQosSupportOk returns a tuple with the QosSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetQosSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.QosSupport) {
		return nil, false
	}
	return o.QosSupport, true
}

// HasQosSupport returns a boolean if a field has been set.
func (o *Capabilities) HasQosSupport() bool {
	if o != nil && !IsNil(o.QosSupport) {
		return true
	}

	return false
}

// SetQosSupport gets a reference to the given bool and assigns it to the QosSupport field.
func (o *Capabilities) SetQosSupport(v bool) {
	o.QosSupport = &v
}

// GetIpv6Support returns the Ipv6Support field value if set, zero value otherwise.
func (o *Capabilities) GetIpv6Support() bool {
	if o == nil || IsNil(o.Ipv6Support) {
		var ret bool
		return ret
	}
	return *o.Ipv6Support
}

// GetIpv6SupportOk returns a tuple with the Ipv6Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetIpv6SupportOk() (*bool, bool) {
	if o == nil || IsNil(o.Ipv6Support) {
		return nil, false
	}
	return o.Ipv6Support, true
}

// HasIpv6Support returns a boolean if a field has been set.
func (o *Capabilities) HasIpv6Support() bool {
	if o != nil && !IsNil(o.Ipv6Support) {
		return true
	}

	return false
}

// SetIpv6Support gets a reference to the given bool and assigns it to the Ipv6Support field.
func (o *Capabilities) SetIpv6Support(v bool) {
	o.Ipv6Support = &v
}

// GetMplsSupport returns the MplsSupport field value if set, zero value otherwise.
func (o *Capabilities) GetMplsSupport() bool {
	if o == nil || IsNil(o.MplsSupport) {
		var ret bool
		return ret
	}
	return *o.MplsSupport
}

// GetMplsSupportOk returns a tuple with the MplsSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetMplsSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.MplsSupport) {
		return nil, false
	}
	return o.MplsSupport, true
}

// HasMplsSupport returns a boolean if a field has been set.
func (o *Capabilities) HasMplsSupport() bool {
	if o != nil && !IsNil(o.MplsSupport) {
		return true
	}

	return false
}

// SetMplsSupport gets a reference to the given bool and assigns it to the MplsSupport field.
func (o *Capabilities) SetMplsSupport(v bool) {
	o.MplsSupport = &v
}

// GetSflowSupport returns the SflowSupport field value if set, zero value otherwise.
func (o *Capabilities) GetSflowSupport() bool {
	if o == nil || IsNil(o.SflowSupport) {
		var ret bool
		return ret
	}
	return *o.SflowSupport
}

// GetSflowSupportOk returns a tuple with the SflowSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetSflowSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.SflowSupport) {
		return nil, false
	}
	return o.SflowSupport, true
}

// HasSflowSupport returns a boolean if a field has been set.
func (o *Capabilities) HasSflowSupport() bool {
	if o != nil && !IsNil(o.SflowSupport) {
		return true
	}

	return false
}

// SetSflowSupport gets a reference to the given bool and assigns it to the SflowSupport field.
func (o *Capabilities) SetSflowSupport(v bool) {
	o.SflowSupport = &v
}

// GetNetflowSupport returns the NetflowSupport field value if set, zero value otherwise.
func (o *Capabilities) GetNetflowSupport() bool {
	if o == nil || IsNil(o.NetflowSupport) {
		var ret bool
		return ret
	}
	return *o.NetflowSupport
}

// GetNetflowSupportOk returns a tuple with the NetflowSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetNetflowSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.NetflowSupport) {
		return nil, false
	}
	return o.NetflowSupport, true
}

// HasNetflowSupport returns a boolean if a field has been set.
func (o *Capabilities) HasNetflowSupport() bool {
	if o != nil && !IsNil(o.NetflowSupport) {
		return true
	}

	return false
}

// SetNetflowSupport gets a reference to the given bool and assigns it to the NetflowSupport field.
func (o *Capabilities) SetNetflowSupport(v bool) {
	o.NetflowSupport = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *Capabilities) GetFeatures() map[string]bool {
	if o == nil || IsNil(o.Features) {
		var ret map[string]bool
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetFeaturesOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *Capabilities) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given map[string]bool and assigns it to the Features field.
func (o *Capabilities) SetFeatures(v map[string]bool) {
	o.Features = &v
}

// GetSupportedProtocols returns the SupportedProtocols field value if set, zero value otherwise.
func (o *Capabilities) GetSupportedProtocols() []string {
	if o == nil || IsNil(o.SupportedProtocols) {
		var ret []string
		return ret
	}
	return o.SupportedProtocols
}

// GetSupportedProtocolsOk returns a tuple with the SupportedProtocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetSupportedProtocolsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedProtocols) {
		return nil, false
	}
	return o.SupportedProtocols, true
}

// HasSupportedProtocols returns a boolean if a field has been set.
func (o *Capabilities) HasSupportedProtocols() bool {
	if o != nil && !IsNil(o.SupportedProtocols) {
		return true
	}

	return false
}

// SetSupportedProtocols gets a reference to the given []string and assigns it to the SupportedProtocols field.
func (o *Capabilities) SetSupportedProtocols(v []string) {
	o.SupportedProtocols = v
}

// GetHardwareCapabilities returns the HardwareCapabilities field value if set, zero value otherwise.
func (o *Capabilities) GetHardwareCapabilities() CapabilitiesHardwareCapabilities {
	if o == nil || IsNil(o.HardwareCapabilities) {
		var ret CapabilitiesHardwareCapabilities
		return ret
	}
	return *o.HardwareCapabilities
}

// GetHardwareCapabilitiesOk returns a tuple with the HardwareCapabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetHardwareCapabilitiesOk() (*CapabilitiesHardwareCapabilities, bool) {
	if o == nil || IsNil(o.HardwareCapabilities) {
		return nil, false
	}
	return o.HardwareCapabilities, true
}

// HasHardwareCapabilities returns a boolean if a field has been set.
func (o *Capabilities) HasHardwareCapabilities() bool {
	if o != nil && !IsNil(o.HardwareCapabilities) {
		return true
	}

	return false
}

// SetHardwareCapabilities gets a reference to the given CapabilitiesHardwareCapabilities and assigns it to the HardwareCapabilities field.
func (o *Capabilities) SetHardwareCapabilities(v CapabilitiesHardwareCapabilities) {
	o.HardwareCapabilities = &v
}

func (o Capabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Capabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoutingSupport) {
		toSerialize["routingSupport"] = o.RoutingSupport
	}
	if !IsNil(o.FirewallSupport) {
		toSerialize["firewallSupport"] = o.FirewallSupport
	}
	if !IsNil(o.VpnSupport) {
		toSerialize["vpnSupport"] = o.VpnSupport
	}
	if !IsNil(o.LoadBalancing) {
		toSerialize["loadBalancing"] = o.LoadBalancing
	}
	if !IsNil(o.QosSupport) {
		toSerialize["qosSupport"] = o.QosSupport
	}
	if !IsNil(o.Ipv6Support) {
		toSerialize["ipv6Support"] = o.Ipv6Support
	}
	if !IsNil(o.MplsSupport) {
		toSerialize["mplsSupport"] = o.MplsSupport
	}
	if !IsNil(o.SflowSupport) {
		toSerialize["sflowSupport"] = o.SflowSupport
	}
	if !IsNil(o.NetflowSupport) {
		toSerialize["netflowSupport"] = o.NetflowSupport
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.SupportedProtocols) {
		toSerialize["supportedProtocols"] = o.SupportedProtocols
	}
	if !IsNil(o.HardwareCapabilities) {
		toSerialize["hardwareCapabilities"] = o.HardwareCapabilities
	}
	return toSerialize, nil
}

type NullableCapabilities struct {
	value *Capabilities
	isSet bool
}

func (v NullableCapabilities) Get() *Capabilities {
	return v.value
}

func (v *NullableCapabilities) Set(val *Capabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapabilities(val *Capabilities) *NullableCapabilities {
	return &NullableCapabilities{value: val, isSet: true}
}

func (v NullableCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


