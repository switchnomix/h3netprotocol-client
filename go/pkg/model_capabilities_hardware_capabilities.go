/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the CapabilitiesHardwareCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CapabilitiesHardwareCapabilities{}

// CapabilitiesHardwareCapabilities struct for CapabilitiesHardwareCapabilities
type CapabilitiesHardwareCapabilities struct {
	TcamSize *int32 `json:"tcamSize,omitempty"`
	BufferSize *int32 `json:"bufferSize,omitempty"`
	ForwardingCapacity *string `json:"forwardingCapacity,omitempty"`
}

// NewCapabilitiesHardwareCapabilities instantiates a new CapabilitiesHardwareCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapabilitiesHardwareCapabilities() *CapabilitiesHardwareCapabilities {
	this := CapabilitiesHardwareCapabilities{}
	return &this
}

// NewCapabilitiesHardwareCapabilitiesWithDefaults instantiates a new CapabilitiesHardwareCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapabilitiesHardwareCapabilitiesWithDefaults() *CapabilitiesHardwareCapabilities {
	this := CapabilitiesHardwareCapabilities{}
	return &this
}

// GetTcamSize returns the TcamSize field value if set, zero value otherwise.
func (o *CapabilitiesHardwareCapabilities) GetTcamSize() int32 {
	if o == nil || IsNil(o.TcamSize) {
		var ret int32
		return ret
	}
	return *o.TcamSize
}

// GetTcamSizeOk returns a tuple with the TcamSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilitiesHardwareCapabilities) GetTcamSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.TcamSize) {
		return nil, false
	}
	return o.TcamSize, true
}

// HasTcamSize returns a boolean if a field has been set.
func (o *CapabilitiesHardwareCapabilities) HasTcamSize() bool {
	if o != nil && !IsNil(o.TcamSize) {
		return true
	}

	return false
}

// SetTcamSize gets a reference to the given int32 and assigns it to the TcamSize field.
func (o *CapabilitiesHardwareCapabilities) SetTcamSize(v int32) {
	o.TcamSize = &v
}

// GetBufferSize returns the BufferSize field value if set, zero value otherwise.
func (o *CapabilitiesHardwareCapabilities) GetBufferSize() int32 {
	if o == nil || IsNil(o.BufferSize) {
		var ret int32
		return ret
	}
	return *o.BufferSize
}

// GetBufferSizeOk returns a tuple with the BufferSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilitiesHardwareCapabilities) GetBufferSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.BufferSize) {
		return nil, false
	}
	return o.BufferSize, true
}

// HasBufferSize returns a boolean if a field has been set.
func (o *CapabilitiesHardwareCapabilities) HasBufferSize() bool {
	if o != nil && !IsNil(o.BufferSize) {
		return true
	}

	return false
}

// SetBufferSize gets a reference to the given int32 and assigns it to the BufferSize field.
func (o *CapabilitiesHardwareCapabilities) SetBufferSize(v int32) {
	o.BufferSize = &v
}

// GetForwardingCapacity returns the ForwardingCapacity field value if set, zero value otherwise.
func (o *CapabilitiesHardwareCapabilities) GetForwardingCapacity() string {
	if o == nil || IsNil(o.ForwardingCapacity) {
		var ret string
		return ret
	}
	return *o.ForwardingCapacity
}

// GetForwardingCapacityOk returns a tuple with the ForwardingCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilitiesHardwareCapabilities) GetForwardingCapacityOk() (*string, bool) {
	if o == nil || IsNil(o.ForwardingCapacity) {
		return nil, false
	}
	return o.ForwardingCapacity, true
}

// HasForwardingCapacity returns a boolean if a field has been set.
func (o *CapabilitiesHardwareCapabilities) HasForwardingCapacity() bool {
	if o != nil && !IsNil(o.ForwardingCapacity) {
		return true
	}

	return false
}

// SetForwardingCapacity gets a reference to the given string and assigns it to the ForwardingCapacity field.
func (o *CapabilitiesHardwareCapabilities) SetForwardingCapacity(v string) {
	o.ForwardingCapacity = &v
}

func (o CapabilitiesHardwareCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CapabilitiesHardwareCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TcamSize) {
		toSerialize["tcamSize"] = o.TcamSize
	}
	if !IsNil(o.BufferSize) {
		toSerialize["bufferSize"] = o.BufferSize
	}
	if !IsNil(o.ForwardingCapacity) {
		toSerialize["forwardingCapacity"] = o.ForwardingCapacity
	}
	return toSerialize, nil
}

type NullableCapabilitiesHardwareCapabilities struct {
	value *CapabilitiesHardwareCapabilities
	isSet bool
}

func (v NullableCapabilitiesHardwareCapabilities) Get() *CapabilitiesHardwareCapabilities {
	return v.value
}

func (v *NullableCapabilitiesHardwareCapabilities) Set(val *CapabilitiesHardwareCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableCapabilitiesHardwareCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableCapabilitiesHardwareCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapabilitiesHardwareCapabilities(val *CapabilitiesHardwareCapabilities) *NullableCapabilitiesHardwareCapabilities {
	return &NullableCapabilitiesHardwareCapabilities{value: val, isSet: true}
}

func (v NullableCapabilitiesHardwareCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapabilitiesHardwareCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


