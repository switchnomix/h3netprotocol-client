/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the BGPNeighborTimers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BGPNeighborTimers{}

// BGPNeighborTimers struct for BGPNeighborTimers
type BGPNeighborTimers struct {
	Keepalive *int32 `json:"keepalive,omitempty"`
	HoldTime *int32 `json:"holdTime,omitempty"`
}

// NewBGPNeighborTimers instantiates a new BGPNeighborTimers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBGPNeighborTimers() *BGPNeighborTimers {
	this := BGPNeighborTimers{}
	return &this
}

// NewBGPNeighborTimersWithDefaults instantiates a new BGPNeighborTimers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBGPNeighborTimersWithDefaults() *BGPNeighborTimers {
	this := BGPNeighborTimers{}
	return &this
}

// GetKeepalive returns the Keepalive field value if set, zero value otherwise.
func (o *BGPNeighborTimers) GetKeepalive() int32 {
	if o == nil || IsNil(o.Keepalive) {
		var ret int32
		return ret
	}
	return *o.Keepalive
}

// GetKeepaliveOk returns a tuple with the Keepalive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGPNeighborTimers) GetKeepaliveOk() (*int32, bool) {
	if o == nil || IsNil(o.Keepalive) {
		return nil, false
	}
	return o.Keepalive, true
}

// HasKeepalive returns a boolean if a field has been set.
func (o *BGPNeighborTimers) HasKeepalive() bool {
	if o != nil && !IsNil(o.Keepalive) {
		return true
	}

	return false
}

// SetKeepalive gets a reference to the given int32 and assigns it to the Keepalive field.
func (o *BGPNeighborTimers) SetKeepalive(v int32) {
	o.Keepalive = &v
}

// GetHoldTime returns the HoldTime field value if set, zero value otherwise.
func (o *BGPNeighborTimers) GetHoldTime() int32 {
	if o == nil || IsNil(o.HoldTime) {
		var ret int32
		return ret
	}
	return *o.HoldTime
}

// GetHoldTimeOk returns a tuple with the HoldTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGPNeighborTimers) GetHoldTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.HoldTime) {
		return nil, false
	}
	return o.HoldTime, true
}

// HasHoldTime returns a boolean if a field has been set.
func (o *BGPNeighborTimers) HasHoldTime() bool {
	if o != nil && !IsNil(o.HoldTime) {
		return true
	}

	return false
}

// SetHoldTime gets a reference to the given int32 and assigns it to the HoldTime field.
func (o *BGPNeighborTimers) SetHoldTime(v int32) {
	o.HoldTime = &v
}

func (o BGPNeighborTimers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BGPNeighborTimers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Keepalive) {
		toSerialize["keepalive"] = o.Keepalive
	}
	if !IsNil(o.HoldTime) {
		toSerialize["holdTime"] = o.HoldTime
	}
	return toSerialize, nil
}

type NullableBGPNeighborTimers struct {
	value *BGPNeighborTimers
	isSet bool
}

func (v NullableBGPNeighborTimers) Get() *BGPNeighborTimers {
	return v.value
}

func (v *NullableBGPNeighborTimers) Set(val *BGPNeighborTimers) {
	v.value = val
	v.isSet = true
}

func (v NullableBGPNeighborTimers) IsSet() bool {
	return v.isSet
}

func (v *NullableBGPNeighborTimers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBGPNeighborTimers(val *BGPNeighborTimers) *NullableBGPNeighborTimers {
	return &NullableBGPNeighborTimers{value: val, isSet: true}
}

func (v NullableBGPNeighborTimers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBGPNeighborTimers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


