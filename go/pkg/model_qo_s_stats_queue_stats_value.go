/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the QoSStatsQueueStatsValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QoSStatsQueueStatsValue{}

// QoSStatsQueueStatsValue struct for QoSStatsQueueStatsValue
type QoSStatsQueueStatsValue struct {
	Packets *float32 `json:"packets,omitempty"`
	Bytes *float32 `json:"bytes,omitempty"`
	Dropped *float32 `json:"dropped,omitempty"`
	QueueLength *float32 `json:"queueLength,omitempty"`
}

// NewQoSStatsQueueStatsValue instantiates a new QoSStatsQueueStatsValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQoSStatsQueueStatsValue() *QoSStatsQueueStatsValue {
	this := QoSStatsQueueStatsValue{}
	return &this
}

// NewQoSStatsQueueStatsValueWithDefaults instantiates a new QoSStatsQueueStatsValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQoSStatsQueueStatsValueWithDefaults() *QoSStatsQueueStatsValue {
	this := QoSStatsQueueStatsValue{}
	return &this
}

// GetPackets returns the Packets field value if set, zero value otherwise.
func (o *QoSStatsQueueStatsValue) GetPackets() float32 {
	if o == nil || IsNil(o.Packets) {
		var ret float32
		return ret
	}
	return *o.Packets
}

// GetPacketsOk returns a tuple with the Packets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QoSStatsQueueStatsValue) GetPacketsOk() (*float32, bool) {
	if o == nil || IsNil(o.Packets) {
		return nil, false
	}
	return o.Packets, true
}

// HasPackets returns a boolean if a field has been set.
func (o *QoSStatsQueueStatsValue) HasPackets() bool {
	if o != nil && !IsNil(o.Packets) {
		return true
	}

	return false
}

// SetPackets gets a reference to the given float32 and assigns it to the Packets field.
func (o *QoSStatsQueueStatsValue) SetPackets(v float32) {
	o.Packets = &v
}

// GetBytes returns the Bytes field value if set, zero value otherwise.
func (o *QoSStatsQueueStatsValue) GetBytes() float32 {
	if o == nil || IsNil(o.Bytes) {
		var ret float32
		return ret
	}
	return *o.Bytes
}

// GetBytesOk returns a tuple with the Bytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QoSStatsQueueStatsValue) GetBytesOk() (*float32, bool) {
	if o == nil || IsNil(o.Bytes) {
		return nil, false
	}
	return o.Bytes, true
}

// HasBytes returns a boolean if a field has been set.
func (o *QoSStatsQueueStatsValue) HasBytes() bool {
	if o != nil && !IsNil(o.Bytes) {
		return true
	}

	return false
}

// SetBytes gets a reference to the given float32 and assigns it to the Bytes field.
func (o *QoSStatsQueueStatsValue) SetBytes(v float32) {
	o.Bytes = &v
}

// GetDropped returns the Dropped field value if set, zero value otherwise.
func (o *QoSStatsQueueStatsValue) GetDropped() float32 {
	if o == nil || IsNil(o.Dropped) {
		var ret float32
		return ret
	}
	return *o.Dropped
}

// GetDroppedOk returns a tuple with the Dropped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QoSStatsQueueStatsValue) GetDroppedOk() (*float32, bool) {
	if o == nil || IsNil(o.Dropped) {
		return nil, false
	}
	return o.Dropped, true
}

// HasDropped returns a boolean if a field has been set.
func (o *QoSStatsQueueStatsValue) HasDropped() bool {
	if o != nil && !IsNil(o.Dropped) {
		return true
	}

	return false
}

// SetDropped gets a reference to the given float32 and assigns it to the Dropped field.
func (o *QoSStatsQueueStatsValue) SetDropped(v float32) {
	o.Dropped = &v
}

// GetQueueLength returns the QueueLength field value if set, zero value otherwise.
func (o *QoSStatsQueueStatsValue) GetQueueLength() float32 {
	if o == nil || IsNil(o.QueueLength) {
		var ret float32
		return ret
	}
	return *o.QueueLength
}

// GetQueueLengthOk returns a tuple with the QueueLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QoSStatsQueueStatsValue) GetQueueLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.QueueLength) {
		return nil, false
	}
	return o.QueueLength, true
}

// HasQueueLength returns a boolean if a field has been set.
func (o *QoSStatsQueueStatsValue) HasQueueLength() bool {
	if o != nil && !IsNil(o.QueueLength) {
		return true
	}

	return false
}

// SetQueueLength gets a reference to the given float32 and assigns it to the QueueLength field.
func (o *QoSStatsQueueStatsValue) SetQueueLength(v float32) {
	o.QueueLength = &v
}

func (o QoSStatsQueueStatsValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QoSStatsQueueStatsValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Packets) {
		toSerialize["packets"] = o.Packets
	}
	if !IsNil(o.Bytes) {
		toSerialize["bytes"] = o.Bytes
	}
	if !IsNil(o.Dropped) {
		toSerialize["dropped"] = o.Dropped
	}
	if !IsNil(o.QueueLength) {
		toSerialize["queueLength"] = o.QueueLength
	}
	return toSerialize, nil
}

type NullableQoSStatsQueueStatsValue struct {
	value *QoSStatsQueueStatsValue
	isSet bool
}

func (v NullableQoSStatsQueueStatsValue) Get() *QoSStatsQueueStatsValue {
	return v.value
}

func (v *NullableQoSStatsQueueStatsValue) Set(val *QoSStatsQueueStatsValue) {
	v.value = val
	v.isSet = true
}

func (v NullableQoSStatsQueueStatsValue) IsSet() bool {
	return v.isSet
}

func (v *NullableQoSStatsQueueStatsValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQoSStatsQueueStatsValue(val *QoSStatsQueueStatsValue) *NullableQoSStatsQueueStatsValue {
	return &NullableQoSStatsQueueStatsValue{value: val, isSet: true}
}

func (v NullableQoSStatsQueueStatsValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQoSStatsQueueStatsValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


