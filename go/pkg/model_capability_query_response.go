/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CapabilityQueryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CapabilityQueryResponse{}

// CapabilityQueryResponse struct for CapabilityQueryResponse
type CapabilityQueryResponse struct {
	Type string `json:"type"`
	// ISO 8601 formatted timestamp with timezone
	Timestamp time.Time `json:"timestamp"`
	// Schema version
	SchemaVersion string `json:"schemaVersion"`
	// Response status
	Status string `json:"status"`
	// Original request ID
	RequestId *string `json:"requestId,omitempty"`
	Device Device `json:"device"`
	Capabilities Capabilities `json:"capabilities"`
	Interfaces []NetworkInterface `json:"interfaces"`
	SupportedTables []string `json:"supportedTables,omitempty"`
	ExtendedCapabilities map[string]interface{} `json:"extendedCapabilities,omitempty"`
	Constraints *CapabilityQueryResponseAllOfConstraints `json:"constraints,omitempty"`
}

type _CapabilityQueryResponse CapabilityQueryResponse

// NewCapabilityQueryResponse instantiates a new CapabilityQueryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapabilityQueryResponse(type_ string, timestamp time.Time, schemaVersion string, status string, device Device, capabilities Capabilities, interfaces []NetworkInterface) *CapabilityQueryResponse {
	this := CapabilityQueryResponse{}
	this.Type = type_
	this.Timestamp = timestamp
	this.SchemaVersion = schemaVersion
	this.Status = status
	this.Device = device
	this.Capabilities = capabilities
	this.Interfaces = interfaces
	return &this
}

// NewCapabilityQueryResponseWithDefaults instantiates a new CapabilityQueryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapabilityQueryResponseWithDefaults() *CapabilityQueryResponse {
	this := CapabilityQueryResponse{}
	return &this
}

// GetType returns the Type field value
func (o *CapabilityQueryResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CapabilityQueryResponse) SetType(v string) {
	o.Type = v
}

// GetTimestamp returns the Timestamp field value
func (o *CapabilityQueryResponse) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *CapabilityQueryResponse) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetSchemaVersion returns the SchemaVersion field value
func (o *CapabilityQueryResponse) GetSchemaVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetSchemaVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemaVersion, true
}

// SetSchemaVersion sets field value
func (o *CapabilityQueryResponse) SetSchemaVersion(v string) {
	o.SchemaVersion = v
}

// GetStatus returns the Status field value
func (o *CapabilityQueryResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CapabilityQueryResponse) SetStatus(v string) {
	o.Status = v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *CapabilityQueryResponse) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *CapabilityQueryResponse) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *CapabilityQueryResponse) SetRequestId(v string) {
	o.RequestId = &v
}

// GetDevice returns the Device field value
func (o *CapabilityQueryResponse) GetDevice() Device {
	if o == nil {
		var ret Device
		return ret
	}

	return o.Device
}

// GetDeviceOk returns a tuple with the Device field value
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetDeviceOk() (*Device, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Device, true
}

// SetDevice sets field value
func (o *CapabilityQueryResponse) SetDevice(v Device) {
	o.Device = v
}

// GetCapabilities returns the Capabilities field value
func (o *CapabilityQueryResponse) GetCapabilities() Capabilities {
	if o == nil {
		var ret Capabilities
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetCapabilitiesOk() (*Capabilities, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capabilities, true
}

// SetCapabilities sets field value
func (o *CapabilityQueryResponse) SetCapabilities(v Capabilities) {
	o.Capabilities = v
}

// GetInterfaces returns the Interfaces field value
func (o *CapabilityQueryResponse) GetInterfaces() []NetworkInterface {
	if o == nil {
		var ret []NetworkInterface
		return ret
	}

	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetInterfacesOk() ([]NetworkInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Interfaces, true
}

// SetInterfaces sets field value
func (o *CapabilityQueryResponse) SetInterfaces(v []NetworkInterface) {
	o.Interfaces = v
}

// GetSupportedTables returns the SupportedTables field value if set, zero value otherwise.
func (o *CapabilityQueryResponse) GetSupportedTables() []string {
	if o == nil || IsNil(o.SupportedTables) {
		var ret []string
		return ret
	}
	return o.SupportedTables
}

// GetSupportedTablesOk returns a tuple with the SupportedTables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetSupportedTablesOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedTables) {
		return nil, false
	}
	return o.SupportedTables, true
}

// HasSupportedTables returns a boolean if a field has been set.
func (o *CapabilityQueryResponse) HasSupportedTables() bool {
	if o != nil && !IsNil(o.SupportedTables) {
		return true
	}

	return false
}

// SetSupportedTables gets a reference to the given []string and assigns it to the SupportedTables field.
func (o *CapabilityQueryResponse) SetSupportedTables(v []string) {
	o.SupportedTables = v
}

// GetExtendedCapabilities returns the ExtendedCapabilities field value if set, zero value otherwise.
func (o *CapabilityQueryResponse) GetExtendedCapabilities() map[string]interface{} {
	if o == nil || IsNil(o.ExtendedCapabilities) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtendedCapabilities
}

// GetExtendedCapabilitiesOk returns a tuple with the ExtendedCapabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetExtendedCapabilitiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtendedCapabilities) {
		return map[string]interface{}{}, false
	}
	return o.ExtendedCapabilities, true
}

// HasExtendedCapabilities returns a boolean if a field has been set.
func (o *CapabilityQueryResponse) HasExtendedCapabilities() bool {
	if o != nil && !IsNil(o.ExtendedCapabilities) {
		return true
	}

	return false
}

// SetExtendedCapabilities gets a reference to the given map[string]interface{} and assigns it to the ExtendedCapabilities field.
func (o *CapabilityQueryResponse) SetExtendedCapabilities(v map[string]interface{}) {
	o.ExtendedCapabilities = v
}

// GetConstraints returns the Constraints field value if set, zero value otherwise.
func (o *CapabilityQueryResponse) GetConstraints() CapabilityQueryResponseAllOfConstraints {
	if o == nil || IsNil(o.Constraints) {
		var ret CapabilityQueryResponseAllOfConstraints
		return ret
	}
	return *o.Constraints
}

// GetConstraintsOk returns a tuple with the Constraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapabilityQueryResponse) GetConstraintsOk() (*CapabilityQueryResponseAllOfConstraints, bool) {
	if o == nil || IsNil(o.Constraints) {
		return nil, false
	}
	return o.Constraints, true
}

// HasConstraints returns a boolean if a field has been set.
func (o *CapabilityQueryResponse) HasConstraints() bool {
	if o != nil && !IsNil(o.Constraints) {
		return true
	}

	return false
}

// SetConstraints gets a reference to the given CapabilityQueryResponseAllOfConstraints and assigns it to the Constraints field.
func (o *CapabilityQueryResponse) SetConstraints(v CapabilityQueryResponseAllOfConstraints) {
	o.Constraints = &v
}

func (o CapabilityQueryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CapabilityQueryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["schemaVersion"] = o.SchemaVersion
	toSerialize["status"] = o.Status
	if !IsNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	toSerialize["device"] = o.Device
	toSerialize["capabilities"] = o.Capabilities
	toSerialize["interfaces"] = o.Interfaces
	if !IsNil(o.SupportedTables) {
		toSerialize["supportedTables"] = o.SupportedTables
	}
	if !IsNil(o.ExtendedCapabilities) {
		toSerialize["extendedCapabilities"] = o.ExtendedCapabilities
	}
	if !IsNil(o.Constraints) {
		toSerialize["constraints"] = o.Constraints
	}
	return toSerialize, nil
}

func (o *CapabilityQueryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"timestamp",
		"schemaVersion",
		"status",
		"device",
		"capabilities",
		"interfaces",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCapabilityQueryResponse := _CapabilityQueryResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCapabilityQueryResponse)

	if err != nil {
		return err
	}

	*o = CapabilityQueryResponse(varCapabilityQueryResponse)

	return err
}

type NullableCapabilityQueryResponse struct {
	value *CapabilityQueryResponse
	isSet bool
}

func (v NullableCapabilityQueryResponse) Get() *CapabilityQueryResponse {
	return v.value
}

func (v *NullableCapabilityQueryResponse) Set(val *CapabilityQueryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCapabilityQueryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCapabilityQueryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapabilityQueryResponse(val *CapabilityQueryResponse) *NullableCapabilityQueryResponse {
	return &NullableCapabilityQueryResponse{value: val, isSet: true}
}

func (v NullableCapabilityQueryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapabilityQueryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


