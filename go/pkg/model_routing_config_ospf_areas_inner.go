/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutingConfigOspfAreasInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingConfigOspfAreasInner{}

// RoutingConfigOspfAreasInner struct for RoutingConfigOspfAreasInner
type RoutingConfigOspfAreasInner struct {
	// Represents either an IPv4 or IPv6 address
	AreaId string `json:"areaId"`
	Type *string `json:"type,omitempty"`
	Interfaces []string `json:"interfaces,omitempty"`
}

type _RoutingConfigOspfAreasInner RoutingConfigOspfAreasInner

// NewRoutingConfigOspfAreasInner instantiates a new RoutingConfigOspfAreasInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingConfigOspfAreasInner(areaId string) *RoutingConfigOspfAreasInner {
	this := RoutingConfigOspfAreasInner{}
	this.AreaId = areaId
	return &this
}

// NewRoutingConfigOspfAreasInnerWithDefaults instantiates a new RoutingConfigOspfAreasInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingConfigOspfAreasInnerWithDefaults() *RoutingConfigOspfAreasInner {
	this := RoutingConfigOspfAreasInner{}
	return &this
}

// GetAreaId returns the AreaId field value
func (o *RoutingConfigOspfAreasInner) GetAreaId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AreaId
}

// GetAreaIdOk returns a tuple with the AreaId field value
// and a boolean to check if the value has been set.
func (o *RoutingConfigOspfAreasInner) GetAreaIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AreaId, true
}

// SetAreaId sets field value
func (o *RoutingConfigOspfAreasInner) SetAreaId(v string) {
	o.AreaId = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RoutingConfigOspfAreasInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingConfigOspfAreasInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RoutingConfigOspfAreasInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RoutingConfigOspfAreasInner) SetType(v string) {
	o.Type = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *RoutingConfigOspfAreasInner) GetInterfaces() []string {
	if o == nil || IsNil(o.Interfaces) {
		var ret []string
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingConfigOspfAreasInner) GetInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *RoutingConfigOspfAreasInner) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []string and assigns it to the Interfaces field.
func (o *RoutingConfigOspfAreasInner) SetInterfaces(v []string) {
	o.Interfaces = v
}

func (o RoutingConfigOspfAreasInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingConfigOspfAreasInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["areaId"] = o.AreaId
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	return toSerialize, nil
}

func (o *RoutingConfigOspfAreasInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"areaId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutingConfigOspfAreasInner := _RoutingConfigOspfAreasInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutingConfigOspfAreasInner)

	if err != nil {
		return err
	}

	*o = RoutingConfigOspfAreasInner(varRoutingConfigOspfAreasInner)

	return err
}

type NullableRoutingConfigOspfAreasInner struct {
	value *RoutingConfigOspfAreasInner
	isSet bool
}

func (v NullableRoutingConfigOspfAreasInner) Get() *RoutingConfigOspfAreasInner {
	return v.value
}

func (v *NullableRoutingConfigOspfAreasInner) Set(val *RoutingConfigOspfAreasInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingConfigOspfAreasInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingConfigOspfAreasInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingConfigOspfAreasInner(val *RoutingConfigOspfAreasInner) *NullableRoutingConfigOspfAreasInner {
	return &NullableRoutingConfigOspfAreasInner{value: val, isSet: true}
}

func (v NullableRoutingConfigOspfAreasInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingConfigOspfAreasInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


