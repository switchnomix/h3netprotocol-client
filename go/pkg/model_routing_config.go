/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the RoutingConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingConfig{}

// RoutingConfig struct for RoutingConfig
type RoutingConfig struct {
	StaticRoutes []RouteEntry `json:"staticRoutes,omitempty"`
	Bgp *RoutingConfigBgp `json:"bgp,omitempty"`
	Ospf *RoutingConfigOspf `json:"ospf,omitempty"`
}

// NewRoutingConfig instantiates a new RoutingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingConfig() *RoutingConfig {
	this := RoutingConfig{}
	return &this
}

// NewRoutingConfigWithDefaults instantiates a new RoutingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingConfigWithDefaults() *RoutingConfig {
	this := RoutingConfig{}
	return &this
}

// GetStaticRoutes returns the StaticRoutes field value if set, zero value otherwise.
func (o *RoutingConfig) GetStaticRoutes() []RouteEntry {
	if o == nil || IsNil(o.StaticRoutes) {
		var ret []RouteEntry
		return ret
	}
	return o.StaticRoutes
}

// GetStaticRoutesOk returns a tuple with the StaticRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingConfig) GetStaticRoutesOk() ([]RouteEntry, bool) {
	if o == nil || IsNil(o.StaticRoutes) {
		return nil, false
	}
	return o.StaticRoutes, true
}

// HasStaticRoutes returns a boolean if a field has been set.
func (o *RoutingConfig) HasStaticRoutes() bool {
	if o != nil && !IsNil(o.StaticRoutes) {
		return true
	}

	return false
}

// SetStaticRoutes gets a reference to the given []RouteEntry and assigns it to the StaticRoutes field.
func (o *RoutingConfig) SetStaticRoutes(v []RouteEntry) {
	o.StaticRoutes = v
}

// GetBgp returns the Bgp field value if set, zero value otherwise.
func (o *RoutingConfig) GetBgp() RoutingConfigBgp {
	if o == nil || IsNil(o.Bgp) {
		var ret RoutingConfigBgp
		return ret
	}
	return *o.Bgp
}

// GetBgpOk returns a tuple with the Bgp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingConfig) GetBgpOk() (*RoutingConfigBgp, bool) {
	if o == nil || IsNil(o.Bgp) {
		return nil, false
	}
	return o.Bgp, true
}

// HasBgp returns a boolean if a field has been set.
func (o *RoutingConfig) HasBgp() bool {
	if o != nil && !IsNil(o.Bgp) {
		return true
	}

	return false
}

// SetBgp gets a reference to the given RoutingConfigBgp and assigns it to the Bgp field.
func (o *RoutingConfig) SetBgp(v RoutingConfigBgp) {
	o.Bgp = &v
}

// GetOspf returns the Ospf field value if set, zero value otherwise.
func (o *RoutingConfig) GetOspf() RoutingConfigOspf {
	if o == nil || IsNil(o.Ospf) {
		var ret RoutingConfigOspf
		return ret
	}
	return *o.Ospf
}

// GetOspfOk returns a tuple with the Ospf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingConfig) GetOspfOk() (*RoutingConfigOspf, bool) {
	if o == nil || IsNil(o.Ospf) {
		return nil, false
	}
	return o.Ospf, true
}

// HasOspf returns a boolean if a field has been set.
func (o *RoutingConfig) HasOspf() bool {
	if o != nil && !IsNil(o.Ospf) {
		return true
	}

	return false
}

// SetOspf gets a reference to the given RoutingConfigOspf and assigns it to the Ospf field.
func (o *RoutingConfig) SetOspf(v RoutingConfigOspf) {
	o.Ospf = &v
}

func (o RoutingConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StaticRoutes) {
		toSerialize["staticRoutes"] = o.StaticRoutes
	}
	if !IsNil(o.Bgp) {
		toSerialize["bgp"] = o.Bgp
	}
	if !IsNil(o.Ospf) {
		toSerialize["ospf"] = o.Ospf
	}
	return toSerialize, nil
}

type NullableRoutingConfig struct {
	value *RoutingConfig
	isSet bool
}

func (v NullableRoutingConfig) Get() *RoutingConfig {
	return v.value
}

func (v *NullableRoutingConfig) Set(val *RoutingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingConfig(val *RoutingConfig) *NullableRoutingConfig {
	return &NullableRoutingConfig{value: val, isSet: true}
}

func (v NullableRoutingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


