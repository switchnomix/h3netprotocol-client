/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueryBulkCapabilitiesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryBulkCapabilitiesRequest{}

// QueryBulkCapabilitiesRequest struct for QueryBulkCapabilitiesRequest
type QueryBulkCapabilitiesRequest struct {
	// List of device IDs
	Devices []string `json:"devices"`
	Query CapabilityRequestMessage `json:"query"`
}

type _QueryBulkCapabilitiesRequest QueryBulkCapabilitiesRequest

// NewQueryBulkCapabilitiesRequest instantiates a new QueryBulkCapabilitiesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryBulkCapabilitiesRequest(devices []string, query CapabilityRequestMessage) *QueryBulkCapabilitiesRequest {
	this := QueryBulkCapabilitiesRequest{}
	this.Devices = devices
	this.Query = query
	return &this
}

// NewQueryBulkCapabilitiesRequestWithDefaults instantiates a new QueryBulkCapabilitiesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryBulkCapabilitiesRequestWithDefaults() *QueryBulkCapabilitiesRequest {
	this := QueryBulkCapabilitiesRequest{}
	return &this
}

// GetDevices returns the Devices field value
func (o *QueryBulkCapabilitiesRequest) GetDevices() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value
// and a boolean to check if the value has been set.
func (o *QueryBulkCapabilitiesRequest) GetDevicesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Devices, true
}

// SetDevices sets field value
func (o *QueryBulkCapabilitiesRequest) SetDevices(v []string) {
	o.Devices = v
}

// GetQuery returns the Query field value
func (o *QueryBulkCapabilitiesRequest) GetQuery() CapabilityRequestMessage {
	if o == nil {
		var ret CapabilityRequestMessage
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *QueryBulkCapabilitiesRequest) GetQueryOk() (*CapabilityRequestMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *QueryBulkCapabilitiesRequest) SetQuery(v CapabilityRequestMessage) {
	o.Query = v
}

func (o QueryBulkCapabilitiesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryBulkCapabilitiesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["devices"] = o.Devices
	toSerialize["query"] = o.Query
	return toSerialize, nil
}

func (o *QueryBulkCapabilitiesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"devices",
		"query",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryBulkCapabilitiesRequest := _QueryBulkCapabilitiesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryBulkCapabilitiesRequest)

	if err != nil {
		return err
	}

	*o = QueryBulkCapabilitiesRequest(varQueryBulkCapabilitiesRequest)

	return err
}

type NullableQueryBulkCapabilitiesRequest struct {
	value *QueryBulkCapabilitiesRequest
	isSet bool
}

func (v NullableQueryBulkCapabilitiesRequest) Get() *QueryBulkCapabilitiesRequest {
	return v.value
}

func (v *NullableQueryBulkCapabilitiesRequest) Set(val *QueryBulkCapabilitiesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryBulkCapabilitiesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryBulkCapabilitiesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryBulkCapabilitiesRequest(val *QueryBulkCapabilitiesRequest) *NullableQueryBulkCapabilitiesRequest {
	return &NullableQueryBulkCapabilitiesRequest{value: val, isSet: true}
}

func (v NullableQueryBulkCapabilitiesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryBulkCapabilitiesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


