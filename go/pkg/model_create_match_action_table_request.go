/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CreateMatchActionTableRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMatchActionTableRequest{}

// CreateMatchActionTableRequest struct for CreateMatchActionTableRequest
type CreateMatchActionTableRequest struct {
	Type string `json:"type"`
	Timestamp time.Time `json:"timestamp"`
	// Request identifier for tracking
	RequestId string `json:"requestId"`
	// Schema version
	SchemaVersion *string `json:"schemaVersion,omitempty"`
	// Device identifier
	DeviceId string `json:"deviceId"`
	// Unique table identifier for this device
	TableId int32 `json:"tableId"`
	// Human-readable table name
	Name string `json:"name"`
	// ID of the next table in the chain
	NextTableId *int32 `json:"nextTableId,omitempty"`
	FlowEntries []FlowEntry `json:"flowEntries,omitempty"`
}

type _CreateMatchActionTableRequest CreateMatchActionTableRequest

// NewCreateMatchActionTableRequest instantiates a new CreateMatchActionTableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMatchActionTableRequest(type_ string, timestamp time.Time, requestId string, deviceId string, tableId int32, name string) *CreateMatchActionTableRequest {
	this := CreateMatchActionTableRequest{}
	this.Type = type_
	this.Timestamp = timestamp
	this.RequestId = requestId
	this.DeviceId = deviceId
	this.TableId = tableId
	this.Name = name
	return &this
}

// NewCreateMatchActionTableRequestWithDefaults instantiates a new CreateMatchActionTableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMatchActionTableRequestWithDefaults() *CreateMatchActionTableRequest {
	this := CreateMatchActionTableRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateMatchActionTableRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateMatchActionTableRequest) SetType(v string) {
	o.Type = v
}

// GetTimestamp returns the Timestamp field value
func (o *CreateMatchActionTableRequest) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *CreateMatchActionTableRequest) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetRequestId returns the RequestId field value
func (o *CreateMatchActionTableRequest) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *CreateMatchActionTableRequest) SetRequestId(v string) {
	o.RequestId = v
}

// GetSchemaVersion returns the SchemaVersion field value if set, zero value otherwise.
func (o *CreateMatchActionTableRequest) GetSchemaVersion() string {
	if o == nil || IsNil(o.SchemaVersion) {
		var ret string
		return ret
	}
	return *o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetSchemaVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SchemaVersion) {
		return nil, false
	}
	return o.SchemaVersion, true
}

// HasSchemaVersion returns a boolean if a field has been set.
func (o *CreateMatchActionTableRequest) HasSchemaVersion() bool {
	if o != nil && !IsNil(o.SchemaVersion) {
		return true
	}

	return false
}

// SetSchemaVersion gets a reference to the given string and assigns it to the SchemaVersion field.
func (o *CreateMatchActionTableRequest) SetSchemaVersion(v string) {
	o.SchemaVersion = &v
}

// GetDeviceId returns the DeviceId field value
func (o *CreateMatchActionTableRequest) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *CreateMatchActionTableRequest) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetTableId returns the TableId field value
func (o *CreateMatchActionTableRequest) GetTableId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TableId
}

// GetTableIdOk returns a tuple with the TableId field value
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetTableIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TableId, true
}

// SetTableId sets field value
func (o *CreateMatchActionTableRequest) SetTableId(v int32) {
	o.TableId = v
}

// GetName returns the Name field value
func (o *CreateMatchActionTableRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateMatchActionTableRequest) SetName(v string) {
	o.Name = v
}

// GetNextTableId returns the NextTableId field value if set, zero value otherwise.
func (o *CreateMatchActionTableRequest) GetNextTableId() int32 {
	if o == nil || IsNil(o.NextTableId) {
		var ret int32
		return ret
	}
	return *o.NextTableId
}

// GetNextTableIdOk returns a tuple with the NextTableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetNextTableIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NextTableId) {
		return nil, false
	}
	return o.NextTableId, true
}

// HasNextTableId returns a boolean if a field has been set.
func (o *CreateMatchActionTableRequest) HasNextTableId() bool {
	if o != nil && !IsNil(o.NextTableId) {
		return true
	}

	return false
}

// SetNextTableId gets a reference to the given int32 and assigns it to the NextTableId field.
func (o *CreateMatchActionTableRequest) SetNextTableId(v int32) {
	o.NextTableId = &v
}

// GetFlowEntries returns the FlowEntries field value if set, zero value otherwise.
func (o *CreateMatchActionTableRequest) GetFlowEntries() []FlowEntry {
	if o == nil || IsNil(o.FlowEntries) {
		var ret []FlowEntry
		return ret
	}
	return o.FlowEntries
}

// GetFlowEntriesOk returns a tuple with the FlowEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMatchActionTableRequest) GetFlowEntriesOk() ([]FlowEntry, bool) {
	if o == nil || IsNil(o.FlowEntries) {
		return nil, false
	}
	return o.FlowEntries, true
}

// HasFlowEntries returns a boolean if a field has been set.
func (o *CreateMatchActionTableRequest) HasFlowEntries() bool {
	if o != nil && !IsNil(o.FlowEntries) {
		return true
	}

	return false
}

// SetFlowEntries gets a reference to the given []FlowEntry and assigns it to the FlowEntries field.
func (o *CreateMatchActionTableRequest) SetFlowEntries(v []FlowEntry) {
	o.FlowEntries = v
}

func (o CreateMatchActionTableRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMatchActionTableRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["requestId"] = o.RequestId
	if !IsNil(o.SchemaVersion) {
		toSerialize["schemaVersion"] = o.SchemaVersion
	}
	toSerialize["deviceId"] = o.DeviceId
	toSerialize["tableId"] = o.TableId
	toSerialize["name"] = o.Name
	if !IsNil(o.NextTableId) {
		toSerialize["nextTableId"] = o.NextTableId
	}
	if !IsNil(o.FlowEntries) {
		toSerialize["flowEntries"] = o.FlowEntries
	}
	return toSerialize, nil
}

func (o *CreateMatchActionTableRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"timestamp",
		"requestId",
		"deviceId",
		"tableId",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateMatchActionTableRequest := _CreateMatchActionTableRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateMatchActionTableRequest)

	if err != nil {
		return err
	}

	*o = CreateMatchActionTableRequest(varCreateMatchActionTableRequest)

	return err
}

type NullableCreateMatchActionTableRequest struct {
	value *CreateMatchActionTableRequest
	isSet bool
}

func (v NullableCreateMatchActionTableRequest) Get() *CreateMatchActionTableRequest {
	return v.value
}

func (v *NullableCreateMatchActionTableRequest) Set(val *CreateMatchActionTableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMatchActionTableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMatchActionTableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMatchActionTableRequest(val *CreateMatchActionTableRequest) *NullableCreateMatchActionTableRequest {
	return &NullableCreateMatchActionTableRequest{value: val, isSet: true}
}

func (v NullableCreateMatchActionTableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMatchActionTableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


