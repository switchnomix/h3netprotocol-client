/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the VLANSecurityMacLimiters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VLANSecurityMacLimiters{}

// VLANSecurityMacLimiters struct for VLANSecurityMacLimiters
type VLANSecurityMacLimiters struct {
	MaxMacAddresses *int32 `json:"maxMacAddresses,omitempty"`
	ViolationAction *string `json:"violationAction,omitempty"`
}

// NewVLANSecurityMacLimiters instantiates a new VLANSecurityMacLimiters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVLANSecurityMacLimiters() *VLANSecurityMacLimiters {
	this := VLANSecurityMacLimiters{}
	return &this
}

// NewVLANSecurityMacLimitersWithDefaults instantiates a new VLANSecurityMacLimiters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVLANSecurityMacLimitersWithDefaults() *VLANSecurityMacLimiters {
	this := VLANSecurityMacLimiters{}
	return &this
}

// GetMaxMacAddresses returns the MaxMacAddresses field value if set, zero value otherwise.
func (o *VLANSecurityMacLimiters) GetMaxMacAddresses() int32 {
	if o == nil || IsNil(o.MaxMacAddresses) {
		var ret int32
		return ret
	}
	return *o.MaxMacAddresses
}

// GetMaxMacAddressesOk returns a tuple with the MaxMacAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VLANSecurityMacLimiters) GetMaxMacAddressesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxMacAddresses) {
		return nil, false
	}
	return o.MaxMacAddresses, true
}

// HasMaxMacAddresses returns a boolean if a field has been set.
func (o *VLANSecurityMacLimiters) HasMaxMacAddresses() bool {
	if o != nil && !IsNil(o.MaxMacAddresses) {
		return true
	}

	return false
}

// SetMaxMacAddresses gets a reference to the given int32 and assigns it to the MaxMacAddresses field.
func (o *VLANSecurityMacLimiters) SetMaxMacAddresses(v int32) {
	o.MaxMacAddresses = &v
}

// GetViolationAction returns the ViolationAction field value if set, zero value otherwise.
func (o *VLANSecurityMacLimiters) GetViolationAction() string {
	if o == nil || IsNil(o.ViolationAction) {
		var ret string
		return ret
	}
	return *o.ViolationAction
}

// GetViolationActionOk returns a tuple with the ViolationAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VLANSecurityMacLimiters) GetViolationActionOk() (*string, bool) {
	if o == nil || IsNil(o.ViolationAction) {
		return nil, false
	}
	return o.ViolationAction, true
}

// HasViolationAction returns a boolean if a field has been set.
func (o *VLANSecurityMacLimiters) HasViolationAction() bool {
	if o != nil && !IsNil(o.ViolationAction) {
		return true
	}

	return false
}

// SetViolationAction gets a reference to the given string and assigns it to the ViolationAction field.
func (o *VLANSecurityMacLimiters) SetViolationAction(v string) {
	o.ViolationAction = &v
}

func (o VLANSecurityMacLimiters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VLANSecurityMacLimiters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxMacAddresses) {
		toSerialize["maxMacAddresses"] = o.MaxMacAddresses
	}
	if !IsNil(o.ViolationAction) {
		toSerialize["violationAction"] = o.ViolationAction
	}
	return toSerialize, nil
}

type NullableVLANSecurityMacLimiters struct {
	value *VLANSecurityMacLimiters
	isSet bool
}

func (v NullableVLANSecurityMacLimiters) Get() *VLANSecurityMacLimiters {
	return v.value
}

func (v *NullableVLANSecurityMacLimiters) Set(val *VLANSecurityMacLimiters) {
	v.value = val
	v.isSet = true
}

func (v NullableVLANSecurityMacLimiters) IsSet() bool {
	return v.isSet
}

func (v *NullableVLANSecurityMacLimiters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVLANSecurityMacLimiters(val *VLANSecurityMacLimiters) *NullableVLANSecurityMacLimiters {
	return &NullableVLANSecurityMacLimiters{value: val, isSet: true}
}

func (v NullableVLANSecurityMacLimiters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVLANSecurityMacLimiters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


