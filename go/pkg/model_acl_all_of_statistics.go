/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
	"time"
)

// checks if the ACLAllOfStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ACLAllOfStatistics{}

// ACLAllOfStatistics struct for ACLAllOfStatistics
type ACLAllOfStatistics struct {
	// Total number of hits across all rules
	TotalHits *int32 `json:"totalHits,omitempty"`
	// Timestamp of the last statistics update
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewACLAllOfStatistics instantiates a new ACLAllOfStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewACLAllOfStatistics() *ACLAllOfStatistics {
	this := ACLAllOfStatistics{}
	return &this
}

// NewACLAllOfStatisticsWithDefaults instantiates a new ACLAllOfStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewACLAllOfStatisticsWithDefaults() *ACLAllOfStatistics {
	this := ACLAllOfStatistics{}
	return &this
}

// GetTotalHits returns the TotalHits field value if set, zero value otherwise.
func (o *ACLAllOfStatistics) GetTotalHits() int32 {
	if o == nil || IsNil(o.TotalHits) {
		var ret int32
		return ret
	}
	return *o.TotalHits
}

// GetTotalHitsOk returns a tuple with the TotalHits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLAllOfStatistics) GetTotalHitsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalHits) {
		return nil, false
	}
	return o.TotalHits, true
}

// HasTotalHits returns a boolean if a field has been set.
func (o *ACLAllOfStatistics) HasTotalHits() bool {
	if o != nil && !IsNil(o.TotalHits) {
		return true
	}

	return false
}

// SetTotalHits gets a reference to the given int32 and assigns it to the TotalHits field.
func (o *ACLAllOfStatistics) SetTotalHits(v int32) {
	o.TotalHits = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ACLAllOfStatistics) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ACLAllOfStatistics) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ACLAllOfStatistics) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ACLAllOfStatistics) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o ACLAllOfStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ACLAllOfStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalHits) {
		toSerialize["totalHits"] = o.TotalHits
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableACLAllOfStatistics struct {
	value *ACLAllOfStatistics
	isSet bool
}

func (v NullableACLAllOfStatistics) Get() *ACLAllOfStatistics {
	return v.value
}

func (v *NullableACLAllOfStatistics) Set(val *ACLAllOfStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableACLAllOfStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableACLAllOfStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableACLAllOfStatistics(val *ACLAllOfStatistics) *NullableACLAllOfStatistics {
	return &NullableACLAllOfStatistics{value: val, isSet: true}
}

func (v NullableACLAllOfStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableACLAllOfStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


