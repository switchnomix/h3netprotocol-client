/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the VLANSecurityPrivateVlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VLANSecurityPrivateVlan{}

// VLANSecurityPrivateVlan struct for VLANSecurityPrivateVlan
type VLANSecurityPrivateVlan struct {
	Type *string `json:"type,omitempty"`
	PrimaryVlan *int32 `json:"primaryVlan,omitempty"`
	SecondaryVlans []int32 `json:"secondaryVlans,omitempty"`
}

// NewVLANSecurityPrivateVlan instantiates a new VLANSecurityPrivateVlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVLANSecurityPrivateVlan() *VLANSecurityPrivateVlan {
	this := VLANSecurityPrivateVlan{}
	return &this
}

// NewVLANSecurityPrivateVlanWithDefaults instantiates a new VLANSecurityPrivateVlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVLANSecurityPrivateVlanWithDefaults() *VLANSecurityPrivateVlan {
	this := VLANSecurityPrivateVlan{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VLANSecurityPrivateVlan) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VLANSecurityPrivateVlan) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VLANSecurityPrivateVlan) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VLANSecurityPrivateVlan) SetType(v string) {
	o.Type = &v
}

// GetPrimaryVlan returns the PrimaryVlan field value if set, zero value otherwise.
func (o *VLANSecurityPrivateVlan) GetPrimaryVlan() int32 {
	if o == nil || IsNil(o.PrimaryVlan) {
		var ret int32
		return ret
	}
	return *o.PrimaryVlan
}

// GetPrimaryVlanOk returns a tuple with the PrimaryVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VLANSecurityPrivateVlan) GetPrimaryVlanOk() (*int32, bool) {
	if o == nil || IsNil(o.PrimaryVlan) {
		return nil, false
	}
	return o.PrimaryVlan, true
}

// HasPrimaryVlan returns a boolean if a field has been set.
func (o *VLANSecurityPrivateVlan) HasPrimaryVlan() bool {
	if o != nil && !IsNil(o.PrimaryVlan) {
		return true
	}

	return false
}

// SetPrimaryVlan gets a reference to the given int32 and assigns it to the PrimaryVlan field.
func (o *VLANSecurityPrivateVlan) SetPrimaryVlan(v int32) {
	o.PrimaryVlan = &v
}

// GetSecondaryVlans returns the SecondaryVlans field value if set, zero value otherwise.
func (o *VLANSecurityPrivateVlan) GetSecondaryVlans() []int32 {
	if o == nil || IsNil(o.SecondaryVlans) {
		var ret []int32
		return ret
	}
	return o.SecondaryVlans
}

// GetSecondaryVlansOk returns a tuple with the SecondaryVlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VLANSecurityPrivateVlan) GetSecondaryVlansOk() ([]int32, bool) {
	if o == nil || IsNil(o.SecondaryVlans) {
		return nil, false
	}
	return o.SecondaryVlans, true
}

// HasSecondaryVlans returns a boolean if a field has been set.
func (o *VLANSecurityPrivateVlan) HasSecondaryVlans() bool {
	if o != nil && !IsNil(o.SecondaryVlans) {
		return true
	}

	return false
}

// SetSecondaryVlans gets a reference to the given []int32 and assigns it to the SecondaryVlans field.
func (o *VLANSecurityPrivateVlan) SetSecondaryVlans(v []int32) {
	o.SecondaryVlans = v
}

func (o VLANSecurityPrivateVlan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VLANSecurityPrivateVlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.PrimaryVlan) {
		toSerialize["primaryVlan"] = o.PrimaryVlan
	}
	if !IsNil(o.SecondaryVlans) {
		toSerialize["secondaryVlans"] = o.SecondaryVlans
	}
	return toSerialize, nil
}

type NullableVLANSecurityPrivateVlan struct {
	value *VLANSecurityPrivateVlan
	isSet bool
}

func (v NullableVLANSecurityPrivateVlan) Get() *VLANSecurityPrivateVlan {
	return v.value
}

func (v *NullableVLANSecurityPrivateVlan) Set(val *VLANSecurityPrivateVlan) {
	v.value = val
	v.isSet = true
}

func (v NullableVLANSecurityPrivateVlan) IsSet() bool {
	return v.isSet
}

func (v *NullableVLANSecurityPrivateVlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVLANSecurityPrivateVlan(val *VLANSecurityPrivateVlan) *NullableVLANSecurityPrivateVlan {
	return &NullableVLANSecurityPrivateVlan{value: val, isSet: true}
}

func (v NullableVLANSecurityPrivateVlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVLANSecurityPrivateVlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


