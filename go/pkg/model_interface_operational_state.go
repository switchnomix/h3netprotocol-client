/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the InterfaceOperationalState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceOperationalState{}

// InterfaceOperationalState struct for InterfaceOperationalState
type InterfaceOperationalState struct {
	Name string `json:"name"`
	OperStatus string `json:"operStatus"`
	AdminStatus string `json:"adminStatus"`
	LastChange *time.Time `json:"lastChange,omitempty"`
}

type _InterfaceOperationalState InterfaceOperationalState

// NewInterfaceOperationalState instantiates a new InterfaceOperationalState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceOperationalState(name string, operStatus string, adminStatus string) *InterfaceOperationalState {
	this := InterfaceOperationalState{}
	this.Name = name
	this.OperStatus = operStatus
	this.AdminStatus = adminStatus
	return &this
}

// NewInterfaceOperationalStateWithDefaults instantiates a new InterfaceOperationalState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceOperationalStateWithDefaults() *InterfaceOperationalState {
	this := InterfaceOperationalState{}
	return &this
}

// GetName returns the Name field value
func (o *InterfaceOperationalState) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InterfaceOperationalState) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InterfaceOperationalState) SetName(v string) {
	o.Name = v
}

// GetOperStatus returns the OperStatus field value
func (o *InterfaceOperationalState) GetOperStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperStatus
}

// GetOperStatusOk returns a tuple with the OperStatus field value
// and a boolean to check if the value has been set.
func (o *InterfaceOperationalState) GetOperStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperStatus, true
}

// SetOperStatus sets field value
func (o *InterfaceOperationalState) SetOperStatus(v string) {
	o.OperStatus = v
}

// GetAdminStatus returns the AdminStatus field value
func (o *InterfaceOperationalState) GetAdminStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdminStatus
}

// GetAdminStatusOk returns a tuple with the AdminStatus field value
// and a boolean to check if the value has been set.
func (o *InterfaceOperationalState) GetAdminStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminStatus, true
}

// SetAdminStatus sets field value
func (o *InterfaceOperationalState) SetAdminStatus(v string) {
	o.AdminStatus = v
}

// GetLastChange returns the LastChange field value if set, zero value otherwise.
func (o *InterfaceOperationalState) GetLastChange() time.Time {
	if o == nil || IsNil(o.LastChange) {
		var ret time.Time
		return ret
	}
	return *o.LastChange
}

// GetLastChangeOk returns a tuple with the LastChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceOperationalState) GetLastChangeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastChange) {
		return nil, false
	}
	return o.LastChange, true
}

// HasLastChange returns a boolean if a field has been set.
func (o *InterfaceOperationalState) HasLastChange() bool {
	if o != nil && !IsNil(o.LastChange) {
		return true
	}

	return false
}

// SetLastChange gets a reference to the given time.Time and assigns it to the LastChange field.
func (o *InterfaceOperationalState) SetLastChange(v time.Time) {
	o.LastChange = &v
}

func (o InterfaceOperationalState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceOperationalState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["operStatus"] = o.OperStatus
	toSerialize["adminStatus"] = o.AdminStatus
	if !IsNil(o.LastChange) {
		toSerialize["lastChange"] = o.LastChange
	}
	return toSerialize, nil
}

func (o *InterfaceOperationalState) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"operStatus",
		"adminStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInterfaceOperationalState := _InterfaceOperationalState{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInterfaceOperationalState)

	if err != nil {
		return err
	}

	*o = InterfaceOperationalState(varInterfaceOperationalState)

	return err
}

type NullableInterfaceOperationalState struct {
	value *InterfaceOperationalState
	isSet bool
}

func (v NullableInterfaceOperationalState) Get() *InterfaceOperationalState {
	return v.value
}

func (v *NullableInterfaceOperationalState) Set(val *InterfaceOperationalState) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceOperationalState) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceOperationalState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceOperationalState(val *InterfaceOperationalState) *NullableInterfaceOperationalState {
	return &NullableInterfaceOperationalState{value: val, isSet: true}
}

func (v NullableInterfaceOperationalState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceOperationalState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


