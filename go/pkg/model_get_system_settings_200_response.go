/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the GetSystemSettings200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemSettings200Response{}

// GetSystemSettings200Response struct for GetSystemSettings200Response
type GetSystemSettings200Response struct {
	Hostname *string `json:"hostname,omitempty"`
	DnsSettings *DnsSettings `json:"dnsSettings,omitempty"`
	// List of NTP servers (can be IP addresses or FQDNs)
	NtpServers []DeviceSettingsNtpServersInner `json:"ntpServers,omitempty"`
	// List of syslog servers
	SyslogServers []DeviceSettingsNtpServersInner `json:"syslogServers,omitempty"`
}

// NewGetSystemSettings200Response instantiates a new GetSystemSettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemSettings200Response() *GetSystemSettings200Response {
	this := GetSystemSettings200Response{}
	return &this
}

// NewGetSystemSettings200ResponseWithDefaults instantiates a new GetSystemSettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemSettings200ResponseWithDefaults() *GetSystemSettings200Response {
	this := GetSystemSettings200Response{}
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *GetSystemSettings200Response) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemSettings200Response) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *GetSystemSettings200Response) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *GetSystemSettings200Response) SetHostname(v string) {
	o.Hostname = &v
}

// GetDnsSettings returns the DnsSettings field value if set, zero value otherwise.
func (o *GetSystemSettings200Response) GetDnsSettings() DnsSettings {
	if o == nil || IsNil(o.DnsSettings) {
		var ret DnsSettings
		return ret
	}
	return *o.DnsSettings
}

// GetDnsSettingsOk returns a tuple with the DnsSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemSettings200Response) GetDnsSettingsOk() (*DnsSettings, bool) {
	if o == nil || IsNil(o.DnsSettings) {
		return nil, false
	}
	return o.DnsSettings, true
}

// HasDnsSettings returns a boolean if a field has been set.
func (o *GetSystemSettings200Response) HasDnsSettings() bool {
	if o != nil && !IsNil(o.DnsSettings) {
		return true
	}

	return false
}

// SetDnsSettings gets a reference to the given DnsSettings and assigns it to the DnsSettings field.
func (o *GetSystemSettings200Response) SetDnsSettings(v DnsSettings) {
	o.DnsSettings = &v
}

// GetNtpServers returns the NtpServers field value if set, zero value otherwise.
func (o *GetSystemSettings200Response) GetNtpServers() []DeviceSettingsNtpServersInner {
	if o == nil || IsNil(o.NtpServers) {
		var ret []DeviceSettingsNtpServersInner
		return ret
	}
	return o.NtpServers
}

// GetNtpServersOk returns a tuple with the NtpServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemSettings200Response) GetNtpServersOk() ([]DeviceSettingsNtpServersInner, bool) {
	if o == nil || IsNil(o.NtpServers) {
		return nil, false
	}
	return o.NtpServers, true
}

// HasNtpServers returns a boolean if a field has been set.
func (o *GetSystemSettings200Response) HasNtpServers() bool {
	if o != nil && !IsNil(o.NtpServers) {
		return true
	}

	return false
}

// SetNtpServers gets a reference to the given []DeviceSettingsNtpServersInner and assigns it to the NtpServers field.
func (o *GetSystemSettings200Response) SetNtpServers(v []DeviceSettingsNtpServersInner) {
	o.NtpServers = v
}

// GetSyslogServers returns the SyslogServers field value if set, zero value otherwise.
func (o *GetSystemSettings200Response) GetSyslogServers() []DeviceSettingsNtpServersInner {
	if o == nil || IsNil(o.SyslogServers) {
		var ret []DeviceSettingsNtpServersInner
		return ret
	}
	return o.SyslogServers
}

// GetSyslogServersOk returns a tuple with the SyslogServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemSettings200Response) GetSyslogServersOk() ([]DeviceSettingsNtpServersInner, bool) {
	if o == nil || IsNil(o.SyslogServers) {
		return nil, false
	}
	return o.SyslogServers, true
}

// HasSyslogServers returns a boolean if a field has been set.
func (o *GetSystemSettings200Response) HasSyslogServers() bool {
	if o != nil && !IsNil(o.SyslogServers) {
		return true
	}

	return false
}

// SetSyslogServers gets a reference to the given []DeviceSettingsNtpServersInner and assigns it to the SyslogServers field.
func (o *GetSystemSettings200Response) SetSyslogServers(v []DeviceSettingsNtpServersInner) {
	o.SyslogServers = v
}

func (o GetSystemSettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemSettings200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.DnsSettings) {
		toSerialize["dnsSettings"] = o.DnsSettings
	}
	if !IsNil(o.NtpServers) {
		toSerialize["ntpServers"] = o.NtpServers
	}
	if !IsNil(o.SyslogServers) {
		toSerialize["syslogServers"] = o.SyslogServers
	}
	return toSerialize, nil
}

type NullableGetSystemSettings200Response struct {
	value *GetSystemSettings200Response
	isSet bool
}

func (v NullableGetSystemSettings200Response) Get() *GetSystemSettings200Response {
	return v.value
}

func (v *NullableGetSystemSettings200Response) Set(val *GetSystemSettings200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemSettings200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemSettings200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemSettings200Response(val *GetSystemSettings200Response) *NullableGetSystemSettings200Response {
	return &NullableGetSystemSettings200Response{value: val, isSet: true}
}

func (v NullableGetSystemSettings200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemSettings200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


