/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the EnvironmentalMetricsPowerSourcesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentalMetricsPowerSourcesInner{}

// EnvironmentalMetricsPowerSourcesInner struct for EnvironmentalMetricsPowerSourcesInner
type EnvironmentalMetricsPowerSourcesInner struct {
	Id *string `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	Output *float32 `json:"output,omitempty"`
}

// NewEnvironmentalMetricsPowerSourcesInner instantiates a new EnvironmentalMetricsPowerSourcesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentalMetricsPowerSourcesInner() *EnvironmentalMetricsPowerSourcesInner {
	this := EnvironmentalMetricsPowerSourcesInner{}
	return &this
}

// NewEnvironmentalMetricsPowerSourcesInnerWithDefaults instantiates a new EnvironmentalMetricsPowerSourcesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentalMetricsPowerSourcesInnerWithDefaults() *EnvironmentalMetricsPowerSourcesInner {
	this := EnvironmentalMetricsPowerSourcesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnvironmentalMetricsPowerSourcesInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentalMetricsPowerSourcesInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnvironmentalMetricsPowerSourcesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EnvironmentalMetricsPowerSourcesInner) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EnvironmentalMetricsPowerSourcesInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentalMetricsPowerSourcesInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EnvironmentalMetricsPowerSourcesInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EnvironmentalMetricsPowerSourcesInner) SetStatus(v string) {
	o.Status = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *EnvironmentalMetricsPowerSourcesInner) GetOutput() float32 {
	if o == nil || IsNil(o.Output) {
		var ret float32
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentalMetricsPowerSourcesInner) GetOutputOk() (*float32, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *EnvironmentalMetricsPowerSourcesInner) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given float32 and assigns it to the Output field.
func (o *EnvironmentalMetricsPowerSourcesInner) SetOutput(v float32) {
	o.Output = &v
}

func (o EnvironmentalMetricsPowerSourcesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentalMetricsPowerSourcesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	return toSerialize, nil
}

type NullableEnvironmentalMetricsPowerSourcesInner struct {
	value *EnvironmentalMetricsPowerSourcesInner
	isSet bool
}

func (v NullableEnvironmentalMetricsPowerSourcesInner) Get() *EnvironmentalMetricsPowerSourcesInner {
	return v.value
}

func (v *NullableEnvironmentalMetricsPowerSourcesInner) Set(val *EnvironmentalMetricsPowerSourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentalMetricsPowerSourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentalMetricsPowerSourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentalMetricsPowerSourcesInner(val *EnvironmentalMetricsPowerSourcesInner) *NullableEnvironmentalMetricsPowerSourcesInner {
	return &NullableEnvironmentalMetricsPowerSourcesInner{value: val, isSet: true}
}

func (v NullableEnvironmentalMetricsPowerSourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentalMetricsPowerSourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


