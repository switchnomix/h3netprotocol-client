/*
H3Net Protocol API

H3Net Protocol schema with various messages and configurations.

API version: 1.0.0
Contact: h3netprotocol@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package h3netclient

import (
	"encoding/json"
)

// checks if the PortConfigAllOfPortSecurity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortConfigAllOfPortSecurity{}

// PortConfigAllOfPortSecurity Port security settings
type PortConfigAllOfPortSecurity struct {
	Enabled *bool `json:"enabled,omitempty"`
	MaxMacAddresses *int32 `json:"maxMacAddresses,omitempty"`
	ViolationAction *string `json:"violationAction,omitempty"`
}

// NewPortConfigAllOfPortSecurity instantiates a new PortConfigAllOfPortSecurity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortConfigAllOfPortSecurity() *PortConfigAllOfPortSecurity {
	this := PortConfigAllOfPortSecurity{}
	return &this
}

// NewPortConfigAllOfPortSecurityWithDefaults instantiates a new PortConfigAllOfPortSecurity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortConfigAllOfPortSecurityWithDefaults() *PortConfigAllOfPortSecurity {
	this := PortConfigAllOfPortSecurity{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PortConfigAllOfPortSecurity) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortConfigAllOfPortSecurity) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PortConfigAllOfPortSecurity) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PortConfigAllOfPortSecurity) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMaxMacAddresses returns the MaxMacAddresses field value if set, zero value otherwise.
func (o *PortConfigAllOfPortSecurity) GetMaxMacAddresses() int32 {
	if o == nil || IsNil(o.MaxMacAddresses) {
		var ret int32
		return ret
	}
	return *o.MaxMacAddresses
}

// GetMaxMacAddressesOk returns a tuple with the MaxMacAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortConfigAllOfPortSecurity) GetMaxMacAddressesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxMacAddresses) {
		return nil, false
	}
	return o.MaxMacAddresses, true
}

// HasMaxMacAddresses returns a boolean if a field has been set.
func (o *PortConfigAllOfPortSecurity) HasMaxMacAddresses() bool {
	if o != nil && !IsNil(o.MaxMacAddresses) {
		return true
	}

	return false
}

// SetMaxMacAddresses gets a reference to the given int32 and assigns it to the MaxMacAddresses field.
func (o *PortConfigAllOfPortSecurity) SetMaxMacAddresses(v int32) {
	o.MaxMacAddresses = &v
}

// GetViolationAction returns the ViolationAction field value if set, zero value otherwise.
func (o *PortConfigAllOfPortSecurity) GetViolationAction() string {
	if o == nil || IsNil(o.ViolationAction) {
		var ret string
		return ret
	}
	return *o.ViolationAction
}

// GetViolationActionOk returns a tuple with the ViolationAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortConfigAllOfPortSecurity) GetViolationActionOk() (*string, bool) {
	if o == nil || IsNil(o.ViolationAction) {
		return nil, false
	}
	return o.ViolationAction, true
}

// HasViolationAction returns a boolean if a field has been set.
func (o *PortConfigAllOfPortSecurity) HasViolationAction() bool {
	if o != nil && !IsNil(o.ViolationAction) {
		return true
	}

	return false
}

// SetViolationAction gets a reference to the given string and assigns it to the ViolationAction field.
func (o *PortConfigAllOfPortSecurity) SetViolationAction(v string) {
	o.ViolationAction = &v
}

func (o PortConfigAllOfPortSecurity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortConfigAllOfPortSecurity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.MaxMacAddresses) {
		toSerialize["maxMacAddresses"] = o.MaxMacAddresses
	}
	if !IsNil(o.ViolationAction) {
		toSerialize["violationAction"] = o.ViolationAction
	}
	return toSerialize, nil
}

type NullablePortConfigAllOfPortSecurity struct {
	value *PortConfigAllOfPortSecurity
	isSet bool
}

func (v NullablePortConfigAllOfPortSecurity) Get() *PortConfigAllOfPortSecurity {
	return v.value
}

func (v *NullablePortConfigAllOfPortSecurity) Set(val *PortConfigAllOfPortSecurity) {
	v.value = val
	v.isSet = true
}

func (v NullablePortConfigAllOfPortSecurity) IsSet() bool {
	return v.isSet
}

func (v *NullablePortConfigAllOfPortSecurity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortConfigAllOfPortSecurity(val *PortConfigAllOfPortSecurity) *NullablePortConfigAllOfPortSecurity {
	return &NullablePortConfigAllOfPortSecurity{value: val, isSet: true}
}

func (v NullablePortConfigAllOfPortSecurity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortConfigAllOfPortSecurity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


